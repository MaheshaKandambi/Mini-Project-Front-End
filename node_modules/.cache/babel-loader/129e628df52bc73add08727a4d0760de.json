{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js\";\nimport React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\"; // const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"purple\"\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pollQuestion2 = \"What framework do you prefer?\";\nconst pollAnswers2 = [{\n  option: \"React\",\n  votes: 5\n}, {\n  option: \"Vue\",\n  votes: 2\n}, {\n  option: \"Angular\",\n  votes: 1\n}];\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  // theme: \"blue\",\n  theme: \"purple\"\n};\nexport default class Insights extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // pollAnswers1: [...pollAnswers1],\n      pollAnswers2: [...pollAnswers2]\n    };\n\n    this.handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n      const newPollAnswers = pollAnswers.map(answer => {\n        if (answer.option === voteAnswer) answer.votes++;\n        return answer;\n      });\n\n      if (pollNumber === 1) {\n        this.setState({\n          pollAnswers1: newPollAnswers\n        });\n      } else {\n        this.setState({\n          pollAnswers2: newPollAnswers\n        });\n      }\n    };\n\n    this.autoAddVotes = (pollAnswers, pollNumber) => {\n      setTimeout(() => {\n        const choseAnswer = parseInt(Math.random() * 2, 10);\n        this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n        this.autoAddVotes(pollAnswers, pollNumber);\n      }, Math.random() * 5000);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pollAnswers1,\n      pollAnswers2\n    } = this.state;\n    this.autoAddVotes(pollAnswers1, 1);\n    this.autoAddVotes(pollAnswers2, 2);\n  }\n\n  render() {\n    const {\n      pollAnswers2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-poll\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Poll, {\n              question: pollQuestion2,\n              answers: pollAnswers2,\n              onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers2, 2),\n              customStyles: pollStyles2,\n              noStorage: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              pr: 2,\n              pl: 2,\n              display: \"flex\",\n              flexDirection: \"row-reverse\",\n              children: /*#__PURE__*/_jsxDEV(Poll, {\n                question: pollQuestion2,\n                answers: pollAnswers2,\n                onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers2, 2),\n                customStyles: pollStyles2,\n                noStorage: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js"],"names":["React","Component","Box","Grid","Poll","pollQuestion2","pollAnswers2","option","votes","pollStyles2","questionSeparator","questionSeparatorWidth","questionBold","questionColor","align","theme","Insights","state","handleVote","voteAnswer","pollAnswers","pollNumber","newPollAnswers","map","answer","setState","pollAnswers1","autoAddVotes","setTimeout","choseAnswer","parseInt","Math","random","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\n\n// const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"purple\"\n// };\n\nconst pollQuestion2 = \"What framework do you prefer?\";\nconst pollAnswers2 = [\n  { option: \"React\", votes: 5 },\n  { option: \"Vue\", votes: 2 },\n  { option: \"Angular\", votes: 1 }\n];\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  // theme: \"blue\",\n  theme: \"purple\"\n};\n\nexport default class Insights extends Component {\n  state = {\n    // pollAnswers1: [...pollAnswers1],\n    pollAnswers2: [...pollAnswers2]\n  };\n\n  handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n    const newPollAnswers = pollAnswers.map((answer) => {\n      if (answer.option === voteAnswer) answer.votes++;\n      return answer;\n    });\n\n    if (pollNumber === 1) {\n      this.setState({\n        pollAnswers1: newPollAnswers\n      });\n    } else {\n      this.setState({\n        pollAnswers2: newPollAnswers\n      });\n    }\n  };\n\n  componentDidMount() {\n    const { pollAnswers1, pollAnswers2 } = this.state;\n    this.autoAddVotes(pollAnswers1, 1);\n    this.autoAddVotes(pollAnswers2, 2);\n  }\n\n  autoAddVotes = (pollAnswers, pollNumber) => {\n    setTimeout(() => {\n      const choseAnswer = parseInt(Math.random() * 2, 10);\n      this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n      this.autoAddVotes(pollAnswers, pollNumber);\n    }, Math.random() * 5000);\n  };\n\n  render() {\n    const { pollAnswers2 } = this.state;\n\n    return (\n      <div className=\"poll\">\n        <Grid container spacing={3}>\n          <main className=\"main-poll\">\n            <Grid item xs={12}>\n              <Poll\n                question={pollQuestion2}\n                answers={pollAnswers2}\n                onVote={(voteAnswer) =>\n                  this.handleVote(voteAnswer, pollAnswers2, 2)\n                }\n                customStyles={pollStyles2}\n                noStorage\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Box pr={2} pl={2} display=\"flex\" flexDirection=\"row-reverse\">\n                <Poll\n                  question={pollQuestion2}\n                  answers={pollAnswers2}\n                  onVote={(voteAnswer) =>\n                    this.handleVote(voteAnswer, pollAnswers2, 2)\n                  }\n                  customStyles={pollStyles2}\n                  noStorage\n                />\n              </Box>\n            </Grid>\n          </main>\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}