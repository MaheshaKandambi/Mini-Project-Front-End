{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js\";\nimport React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\"; // const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"purple\"\n// };\n// const pollQuestion2 = \"What framework do you prefer?\";\n// const pollAnswers2 = [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ];\n// const pollQuestion3 = \"What framework do you prefer?\";\n// const pollAnswers3 = [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pollAnswers2 = [{\n  id: 1,\n  pollQuestion: \"What framework do you prefer?\",\n  pollAnswers: [{\n    option: \"React\",\n    votes: 5\n  }, {\n    option: \"Vue\",\n    votes: 2\n  }, {\n    option: \"Angular\",\n    votes: 1\n  }]\n}, {\n  id: 2,\n  pollQuestion: \"What do you prefer?\",\n  pollAnswers: [{\n    option: \"ect\",\n    votes: 100\n  }, {\n    option: \"Vueee\",\n    votes: 12\n  }, {\n    option: \"Angular\",\n    votes: 11\n  }]\n}, {\n  id: 3,\n  pollQuestion: \"What do you prefer hiiiii?\",\n  pollAnswers: [{\n    option: \"ect\",\n    votes: 97\n  }, {\n    option: \"Vueee\",\n    votes: 12\n  }, {\n    option: \"Angular\",\n    votes: 11\n  }]\n}];\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\nexport default class Insights extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pollAnswers2: [...pollAnswers2]\n    };\n\n    this.handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n      const newPollAnswers = pollAnswers.map(answer => {\n        if (answer.option === voteAnswer) answer.votes++;\n        return answer;\n      });\n\n      if (pollNumber === 1) {\n        this.setState({\n          pollAnswers1: newPollAnswers\n        });\n      }\n    };\n\n    this.autoAddVotes = (pollAnswers, pollNumber) => {\n      setTimeout(() => {\n        const choseAnswer = parseInt(Math.random() * 2, 10);\n        this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n        this.autoAddVotes(pollAnswers, pollNumber);\n      }, Math.random() * 5000);\n    };\n  }\n\n  render() {\n    const {\n      pollAnswers2,\n      pollAnswers3\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-poll\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: pollAnswers2.map(values => {\n              const {\n                id,\n                pollQuestion,\n                pollAnswers\n              } = values;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Poll, {\n                  question: pollQuestion,\n                  answers: pollAnswers,\n                  onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers2, 2),\n                  customStyles: pollStyles2,\n                  noStorage: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 15\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js"],"names":["React","Component","Box","Grid","Poll","pollAnswers2","id","pollQuestion","pollAnswers","option","votes","pollStyles2","questionSeparator","questionSeparatorWidth","questionBold","questionColor","align","theme","Insights","state","handleVote","voteAnswer","pollNumber","newPollAnswers","map","answer","setState","pollAnswers1","autoAddVotes","setTimeout","choseAnswer","parseInt","Math","random","render","pollAnswers3","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\n\n// const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"purple\"\n// };\n\n// const pollQuestion2 = \"What framework do you prefer?\";\n// const pollAnswers2 = [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ];\n\n// const pollQuestion3 = \"What framework do you prefer?\";\n// const pollAnswers3 = [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ];\n\nconst pollAnswers2 = [\n{\n id: 1,\n pollQuestion : \"What framework do you prefer?\",\n pollAnswers : [\n  { option: \"React\", votes: 5 },\n  { option: \"Vue\", votes: 2 },\n  { option: \"Angular\", votes: 1 }\n],\n},\n{\n  id: 2,\n pollQuestion : \"What do you prefer?\",\n pollAnswers : [\n  { option: \"ect\", votes: 100 },\n  { option: \"Vueee\", votes: 12 },\n  { option: \"Angular\", votes: 11 }\n],\n},\n{\n  id: 3,\npollQuestion : \"What do you prefer hiiiii?\",\npollAnswers : [\n  { option: \"ect\", votes: 97},\n  { option: \"Vueee\", votes: 12 },\n  { option: \"Angular\", votes: 11 }\n],\n}\n]\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\n\n\nexport default class Insights extends Component {\n  state = {\n    pollAnswers2: [...pollAnswers2],\n  };\n\n  handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n    const newPollAnswers = pollAnswers.map((answer) => {\n      if (answer.option === voteAnswer) answer.votes++;\n      return answer;\n    });\n\n    if (pollNumber === 1) {\n      this.setState({\n        pollAnswers1: newPollAnswers\n      });\n    } \n  };\n\n  // componentDidMount() {\n  //   const { pollAnswers1, pollAnswers2, pollAnswers3 } = this.state;\n  //   this.autoAddVotes(pollAnswers2, 2);\n  //   this.autoAddVotes(pollAnswers3, 3);\n  // }\n\n  autoAddVotes = (pollAnswers, pollNumber) => {\n    setTimeout(() => {\n      const choseAnswer = parseInt(Math.random() * 2, 10);\n      this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n      this.autoAddVotes(pollAnswers, pollNumber);\n    }, Math.random() * 5000);\n  };\n\n  render() {\n    const {  pollAnswers2, pollAnswers3 } = this.state;\n\n    return (\n      <div className=\"poll\">\n        <Grid container spacing={3}>\n          <main className=\"main-poll\">\n            \n            <>\n            {pollAnswers2.map((values)=>{\n                const {id, pollQuestion, pollAnswers}=values;\n                   return(\n\n            <Grid item xs={12} key={id}>   \n              <Poll\n                question={pollQuestion}\n                answers={pollAnswers}\n                onVote={(voteAnswer) =>\n                  this.handleVote(voteAnswer, pollAnswers2, 2)\n                }\n                customStyles={pollStyles2}\n                noStorage\n              />\n            </Grid>\n              )\n              })}\n            </> \n          </main>\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}