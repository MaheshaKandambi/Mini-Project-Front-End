{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Kick extends Component {\n  constructor() {\n    super();\n\n    this.inputHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.convertToSeconds = (hours, minutes, seconds) => {\n      return seconds + minutes * 60 + hours * 60 * 60;\n    };\n\n    this.startTimer = () => {\n      this.timer = setInterval(this.countDown, 1000);\n    };\n\n    this.countDown = () => {\n      const {\n        hours,\n        minutes,\n        seconds\n      } = this.state;\n      let c_seconds = this.convertToSeconds(hours, minutes, seconds);\n\n      if (c_seconds) {\n        // seconds change\n        seconds ? this.setState({\n          seconds: seconds - 1\n        }) : this.setState({\n          seconds: 59\n        }); // minutes change\n\n        if (c_seconds % 60 === 0 && minutes) {\n          this.setState({\n            minutes: minutes - 1\n          });\n        } // when only hours entered\n\n\n        if (!minutes && hours) {\n          this.setState({\n            minutes: 59\n          });\n        } // hours change\n\n\n        if (c_seconds % 3600 === 0 && hours) {\n          this.setState({\n            hours: hours - 1\n          });\n        }\n      } else {\n        clearInterval(this.timer);\n      }\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      });\n      this.hoursInput.current.value = 0;\n      this.minutesInput.current.value = 0;\n      this.secondsInput.current.value = 0;\n    };\n\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.hoursInput = /*#__PURE__*/React.createRef();\n    this.minutesInput = /*#__PURE__*/React.createRef();\n    this.secondsInput = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Kick\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \" (( React Countdown )) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hrs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.hoursInput,\n          type: \"number\",\n          placeholder: 0,\n          name: \"hours\",\n          onChange: this.inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Min\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.minutesInput,\n          type: \"number\",\n          placeholder: 0,\n          name: \"minutes\",\n          onChange: this.inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.secondsInput,\n          type: \"number\",\n          placeholder: 0,\n          name: \"seconds\",\n          onChange: this.inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startTimer,\n          className: \"start\",\n          children: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.stopTimer,\n          className: \"stop\",\n          children: \"stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetTimer,\n          className: \"reset\",\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Timer \", hours, \": \", minutes, \" : \", seconds, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Kick;","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js"],"names":["React","Component","Kick","constructor","inputHandler","e","setState","target","name","value","convertToSeconds","hours","minutes","seconds","startTimer","timer","setInterval","countDown","state","c_seconds","clearInterval","stopTimer","resetTimer","hoursInput","current","minutesInput","secondsInput","createRef","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Kick extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds:0\n    }\n    this.hoursInput = React.createRef();\n    this.minutesInput= React.createRef();\n    this.secondsInput = React.createRef();\n  }\n\n  inputHandler = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  convertToSeconds = ( hours, minutes,seconds) => {\n    return seconds + minutes * 60 + hours * 60 * 60;\n  }\n\n  startTimer = () => {\n    this.timer = setInterval(this.countDown, 1000);\n  }\n\n  countDown = () => {\n    const  { hours, minutes, seconds } = this.state;\n    let c_seconds = this.convertToSeconds(hours, minutes, seconds);\n\n    if(c_seconds) {\n\n      // seconds change\n      seconds ? this.setState({seconds: seconds-1}) : this.setState({seconds: 59});\n\n      // minutes change\n      if(c_seconds % 60 === 0 && minutes) {\n        this.setState({minutes: minutes -1});\n      }\n\n      // when only hours entered\n      if(!minutes && hours) {\n        this.setState({minutes: 59});\n      }\n\n      // hours change\n      if(c_seconds % 3600 === 0 && hours) {\n        this.setState({hours: hours-1});\n      }\n\n    } else {\n      clearInterval(this.timer);\n    }\n  }\n\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n  }\n\n  resetTimer = () => {\n    this.setState({\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    });\n    this.hoursInput.current.value = 0;\n    this.minutesInput.current.value = 0;\n    this.secondsInput.current.value = 0;\n  }\n\n\n  render() {\n    const { hours, minutes, seconds } = this.state;\n\n    return (\n      <div className=\"Kick\">\n         <h1 className=\"title\"> (( React Countdown )) </h1>\n         <div className=\"inputGroup\">\n            <h3>Hrs</h3>\n            <input ref={this.hoursInput} type=\"number\" placeholder={0}  name=\"hours\"  onChange={this.inputHandler} />\n            <h3>Min</h3>\n            <input  ref={this.minutesInput} type=\"number\"  placeholder={0}   name=\"minutes\"  onChange={this.inputHandler} />\n            <h3>Sec</h3>\n            <input   ref={this.secondsInput} type=\"number\"  placeholder={0}  name=\"seconds\"  onChange={this.inputHandler} />\n         </div>\n         <div>\n            <button onClick={this.startTimer} className=\"start\">start</button>\n            <button onClick={this.stopTimer}  className=\"stop\">stop</button>\n            <button onClick={this.resetTimer}  className=\"reset\">reset</button>\n         </div>\n         <h1> Timer {hours}: {minutes} : {seconds} </h1>\n      </div>\n\n    );\n  }\n}\n\nexport default Kick;"]},"metadata":{},"sourceType":"module"}