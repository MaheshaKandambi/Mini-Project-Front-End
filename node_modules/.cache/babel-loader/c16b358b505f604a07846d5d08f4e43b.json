{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\nimport \"../SignUp.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap-buttons\";\nimport axios from \"axios\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./Home\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormHelperText, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = _ref => {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const formRef = useRef();\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [messageItem, setMessageItem] = useState({\n    message: \"\",\n    category: \"\"\n  });\n\n  const handleSubmitForm = async data => {\n    try {\n      console.log(\"FORM DATA\", data);\n      const url = `${process.env.REACT_APP_API_ORIGIN}/login`;\n      const res = await axios.post(url, {\n        email: data.email,\n        password: data.password\n      });\n      console.log(res); // formRef.current.resetForm();\n      // setSnackbarOpen(true);\n      // console.log(\"User signed successful!!\");\n      // onLogin();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // function Login() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerStyle\",\n      children: /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: () => {\n          setSnackbarOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n          elevation: 6,\n          variant: \"filled\",\n          onClose: () => {\n            setSnackbarOpen(false);\n          },\n          severity: \"success\",\n          children: \"User signed successful!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/logo2.jpg\",\n          className: \"phone\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/logo1.jpg\",\n            className: \"signup-logo\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: \"Sign up to see photos and videos from your friends.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"or\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: messageItem,\n            validationSchema: Yup.object().shape({\n              email: Yup.string().required(\"Email is required\"),\n              password: Yup.string().required(\"Password is required\")\n            }),\n            onSubmit: handleSubmitForm,\n            innerRef: formRef,\n            children: _ref2 => {\n              let {\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-group\",\n                  id: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  value: values.email,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"password\",\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  value: values.password,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"signup btn-primary btn-block\",\n                  onClick: () => handleSubmit(),\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-column-login text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zhMQYzS0g4AbMeeWLtJVX18CceA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Login.js"],"names":["React","useState","useRef","Link","Button","ButtonGroup","ButtonToolbar","axios","Snackbar","faHome","Home","MuiAlert","Formik","Yup","FormHelperText","TextField","Login","onLogin","formRef","snackbarOpen","setSnackbarOpen","messageItem","setMessageItem","message","category","handleSubmitForm","data","console","log","url","process","env","REACT_APP_API_ORIGIN","res","post","email","password","err","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","touched","errors","Boolean"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,QAAmD,yBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,mBAA1C;;AAEA,OAAO,MAAMC,KAAK,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACpC,QAAMC,OAAO,GAAGhB,MAAM,EAAtB;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IACJrB,QAAQ,CAAC;AACLsB,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAD,CADV;;AAMA,QAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACA,YAAMG,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,QAAhD;AACD,YAAMC,GAAG,GAAE,MAAM1B,KAAK,CAClB2B,IADa,CACRL,GADQ,EACH;AACTM,QAAAA,KAAK,EAAET,IAAI,CAACS,KADH;AAETC,QAAAA,QAAQ,EAAEV,IAAI,CAACU;AAFN,OADG,CAAjB;AAKGT,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ,EARA,CASF;AACA;AACA;AACA;AACD,KAbD,CAaE,OAAOI,GAAP,EAAY;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD;AACF,GAjBD,CAToC,CA4BpC;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA,QAAC,QAAD;AACA,QAAA,IAAI,EAAElB,YADN;AAEA,QAAA,gBAAgB,EAAE,IAFlB;AAGA,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SALD;AAAA,+BAOA,QAAC,QAAD;AACE,UAAA,SAAS,EAAE,CADb;AAEE,UAAA,OAAO,EAAC,QAFV;AAGE,UAAA,OAAO,EAAE,MAAM;AACbA,YAAAA,eAAe,CAAC,KAAD,CAAf;AACD,WALH;AAME,UAAA,QAAQ,EAAC,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAuBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,kBAAT;AAA4B,UAAA,SAAS,EAAC,OAAtC;AAA8C,UAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAC,kBAAT;AAA4B,YAAA,SAAS,EAAC,aAAtC;AAAoD,YAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAQE;AAAG,YAAA,SAAS,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAUE,QAAC,MAAD;AACE,YAAA,aAAa,EAAEC,WADjB;AAEE,YAAA,gBAAgB,EAAER,GAAG,CAACyB,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,cAAAA,KAAK,EAAEtB,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD4B;AAEnCL,cAAAA,QAAQ,EAAEvB,GAAG,CAAC2B,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFyB,aAAnB,CAFpB;AAME,YAAA,QAAQ,EAAEhB,gBANZ;AAOE,YAAA,QAAQ,EAAEP,OAPZ;AAAA,sBASG;AAAA,kBAAC;AACAwB,gBAAAA,YADA;AAEAC,gBAAAA,UAFA;AAGAC,gBAAAA,YAHA;AAIAC,gBAAAA,MAJA;AAKAC,gBAAAA,OALA;AAMAC,gBAAAA;AANA,eAAD;AAAA,kCAQC;AAAA,wCAEI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,EAAE,EAAC,OAFL;AAGE,kBAAA,KAAK,EAAC,OAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,OALP;AAME,kBAAA,QAAQ,EAAEL,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAACV,KAPhB;AAQE,kBAAA,KAAK,EAAEa,OAAO,CAACF,OAAO,CAACvB,OAAR,IAAmBwB,MAAM,CAACxB,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEuB,OAAO,CAACvB,OAAR,IAAmBwB,MAAM,CAACxB,OATxC;AAUE,kBAAA,MAAM,EAAEoB;AAVV;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAcI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,EAAE,EAAC,UAFL;AAGE,kBAAA,KAAK,EAAC,UAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,QAAQ,EAAED,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAACT,QAPhB;AAQE,kBAAA,KAAK,EAAEY,OAAO,CAACF,OAAO,CAACvB,OAAR,IAAmBwB,MAAM,CAACxB,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEuB,OAAO,CAACvB,OAAR,IAAmBwB,MAAM,CAACxB,OATxC;AAUE,kBAAA,MAAM,EAAEoB;AAVV;AAAA;AAAA;AAAA;AAAA,wBAdJ,eAgCI;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,8BAFZ;AAGE,kBAAA,OAAO,EAAE,MAAMC,YAAY,EAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARD;AAAA;AATH;AAAA;AAAA;AAAA;AAAA,kBAVF,eAuEE;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4GD,CAzIM;;GAAM5B,K;;KAAAA,K;AA2Ib,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport \"../SignUp.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap-buttons\";\nimport axios from \"axios\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./Home\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormHelperText, TextField } from \"@material-ui/core\";\n\nexport const Login = ({ onLogin }) => {\n  const formRef = useRef();\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [messageItem, setMessageItem] =\n    useState({\n        message: \"\",\n        category: \"\",\n      });\n    \n  const handleSubmitForm = async (data) => {\n    try {\n      console.log(\"FORM DATA\", data);\n      const url = `${process.env.REACT_APP_API_ORIGIN}/login`;\n     const res= await axios\n        .post(url, {\n          email: data.email,\n          password: data.password,\n        });\n        console.log(res);\n      // formRef.current.resetForm();\n      // setSnackbarOpen(true);\n      // console.log(\"User signed successful!!\");\n      // onLogin();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // function Login() {\n  return (\n    <div className=\"container\">\n        <div className=\"headerStyle\">\n        <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setSnackbarOpen(false);\n        }}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={() => {\n            setSnackbarOpen(false);\n          }}\n          severity=\"success\"\n        >\n          User signed successful!!\n        </MuiAlert>\n      </Snackbar>\n        </div>\n      \n\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <img src=\"images/logo2.jpg\" className=\"phone\" alt=\"...\" />\n        </div>\n        <div className=\"col-sm-6\">\n          <div className=\"right-column text-center\">\n            <img src=\"images/logo1.jpg\" className=\"signup-logo\" alt=\"...\" />\n            <p className=\"info\">\n              Sign up to see photos and videos from your friends.\n            </p>\n            {/* <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                        <img src={Google} alt=\"...\"/>Log in with Google\n                        </button> */}\n            <p className=\"or\">OR</p>\n\n            <Formik\n              initialValues={messageItem}\n              validationSchema={Yup.object().shape({\n                email: Yup.string().required(\"Email is required\"),\n                password: Yup.string().required(\"Password is required\"),\n              })}\n              onSubmit={handleSubmitForm}\n              innerRef={formRef}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors,\n              }) => (\n                <div>\n                  \n                    <TextField\n                      className=\"form-group\"\n                      id=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      value={values.email}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      value={values.password}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    {/* <div className=\"form-group\">\n                                <input type=\"text\" value={data.email} className=\"form-control\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\n                            </div> */}\n                    <button\n                      type=\"submit\"\n                      className=\"signup btn-primary btn-block\"\n                      onClick={() => handleSubmit()}\n                    >\n                      Login\n                    </button>\n                 \n                </div>\n              )}\n            </Formik>\n\n            <div className=\"right-column-login text-center\">\n              <a href=\"#\">Forgot Password?</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}