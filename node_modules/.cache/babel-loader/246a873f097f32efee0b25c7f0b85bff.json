{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState, useRef, useContext } from \"react\";\nimport \"../SignUp.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap-buttons\";\nimport axios from \"axios\";\nimport { Snackbar, useForkRef } from \"@material-ui/core\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./Home\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormHelperText, TextField } from \"@material-ui/core\";\nimport AuthContext from \"../../context/AuthProvider\";\nimport userEvent from \"@testing-library/user-event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = _ref => {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const userRef = useRef();\n  const formRef = useRef();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // useEffect(()=>{\n  //   userRef.current.focus();\n  // // },[])\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, password]);\n  const [messageItem, setMessageItem] = useState({\n    message: \"\",\n    category: \"\"\n  });\n\n  const handleSubmitForm = async data => {\n    try {\n      var _res$data, _res$data2;\n\n      console.log(\"FORM DATA\", data);\n      const url = `${process.env.REACT_APP_API_ORIGIN}/login`;\n      const res = await axios.post(url, {\n        email: data.email,\n        password: data.password\n      });\n      console.log(res.data);\n      const accessToken = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token;\n      console.log(accessToken);\n      localStorage.setItem(\"testJSON\", accessToken);\n      const roles = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.roles;\n\n      const setAuth = _ref2 => {\n        let {\n          email,\n          password,\n          roles,\n          accessToken\n        } = _ref2;\n      };\n\n      setEmail('');\n      setPassword('');\n      setSuccess(true);\n      this.context.router.push('/home'); //01 save res.data in local storage\n      //02\n      //option 1 refresh page\n      // option 2 cotext hook update user token and info\n      //03 \n      //go to authenticated page \n      // => dashboard inside page\n      // formRef.current.resetForm();\n      // setSnackbarOpen(true);\n      // console.log(\"User signed successful!!\");\n      // onLogin();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // function Login() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerStyle\",\n      children: /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: () => {\n          setSnackbarOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n          elevation: 6,\n          variant: \"filled\",\n          onClose: () => {\n            setSnackbarOpen(false);\n          },\n          severity: \"success\",\n          children: \"User signed successful!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/logo2.jpg\",\n          className: \"phone\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/logo1.jpg\",\n            className: \"signup-logo\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: \"Sign up to see photos and videos from your friends.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"or\",\n            children: \"OR123\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: messageItem,\n            validationSchema: Yup.object().shape({\n              email: Yup.string().required(\"Email is required\"),\n              password: Yup.string().required(\"Password is required\")\n            }),\n            onSubmit: handleSubmitForm,\n            innerRef: formRef,\n            children: _ref3 => {\n              let {\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-group\",\n                  id: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  value: values.email,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"password\",\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  value: values.password,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"signup btn-primary btn-block\",\n                  onClick: () => handleSubmit(),\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-column-login text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"fm9Mv53p9/ZZx2nRdv7huzo7hwY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Login.js"],"names":["React","useEffect","useState","useRef","useContext","Link","Button","ButtonGroup","ButtonToolbar","axios","Snackbar","useForkRef","faHome","Home","MuiAlert","Formik","Yup","FormHelperText","TextField","AuthContext","userEvent","Login","onLogin","setAuth","userRef","formRef","email","setEmail","password","setPassword","errMsg","setErrMsg","success","setSuccess","snackbarOpen","setSnackbarOpen","messageItem","setMessageItem","message","category","handleSubmitForm","data","console","log","url","process","env","REACT_APP_API_ORIGIN","res","post","accessToken","token","localStorage","setItem","roles","context","router","push","err","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","touched","errors","Boolean"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState, useRef, useContext} from \"react\";\nimport \"../SignUp.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap-buttons\";\nimport axios from \"axios\";\nimport { Snackbar, useForkRef } from \"@material-ui/core\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Home from \"./Home\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormHelperText, TextField } from \"@material-ui/core\";\nimport AuthContext from \"../../context/AuthProvider\";\nimport userEvent from \"@testing-library/user-event\";\n\nexport const Login = ({ onLogin }) => {\n  const {setAuth}=useContext(AuthContext);\n  const userRef=useRef();\n  const formRef = useRef();\n  const [email,setEmail]=useState('');\n  const [password,setPassword]=useState('');\n  const [errMsg,setErrMsg]=useState('');\n  const [success,setSuccess]=useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  // useEffect(()=>{\n  //   userRef.current.focus();\n  // // },[])\n  useEffect(()=>{\n    setErrMsg('');\n  },[email,password]);\n\n\n  const [messageItem, setMessageItem] =\n    useState({\n        message: \"\",\n        category: \"\",\n      });\n    \n  const handleSubmitForm = async (data) => {\n   \n    try {\n      console.log(\"FORM DATA\", data);\n      const url = `${process.env.REACT_APP_API_ORIGIN}/login`;\n     const res= await axios\n        .post(url, {\n          email:data.email,\n          password:data.password,\n        });\n        console.log(res.data);\n    \n        \n        const accessToken = res?.data?.token;\n        console.log(accessToken);\n        localStorage.setItem(\"testJSON\", accessToken);\n        const roles=res?.data?.roles;\n        const setAuth=({email,password,roles,accessToken})=>{};\n        setEmail('');\n        setPassword('');\n        setSuccess(true);\n\n        \n          this.context.router.push('/home');\n       \n        //01 save res.data in local storage\n        //02\n        //option 1 refresh page\n        // option 2 cotext hook update user token and info\n        //03 \n        //go to authenticated page \n        // => dashboard inside page\n\n       \n      // formRef.current.resetForm();\n      // setSnackbarOpen(true);\n      // console.log(\"User signed successful!!\");\n      // onLogin();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // function Login() {\n  return (\n    <div className=\"container\">\n        <div className=\"headerStyle\">\n        <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={() => {\n          setSnackbarOpen(false);\n        }}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={() => {\n            setSnackbarOpen(false);\n          }}\n          severity=\"success\"\n        >\n          User signed successful!!\n        </MuiAlert>\n      </Snackbar>\n        </div>\n      \n\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <img src=\"images/logo2.jpg\" className=\"phone\" alt=\"...\" />\n        </div>\n        <div className=\"col-sm-6\">\n          <div className=\"right-column text-center\">\n            <img src=\"images/logo1.jpg\" className=\"signup-logo\" alt=\"...\" />\n            <p className=\"info\">\n              Sign up to see photos and videos from your friends.\n            </p>\n            {/* <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                        <img src={Google} alt=\"...\"/>Log in with Google\n                        </button> */}\n            <p className=\"or\">OR123</p>\n\n            <Formik\n              initialValues={messageItem}\n              validationSchema={Yup.object().shape({\n                email: Yup.string().required(\"Email is required\"),\n                password: Yup.string().required(\"Password is required\"),\n              })}\n              onSubmit={handleSubmitForm}\n              innerRef={formRef}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors,\n              }) => (\n                <div>\n                  \n                    <TextField\n                      className=\"form-group\"\n                      id=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      value={values.email}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      value={values.password}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    {/* <div className=\"form-group\">\n                                <input type=\"text\" value={data.email} className=\"form-control\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\n                            </div> */}\n                    <button\n                      type=\"submit\"\n                      className=\"signup btn-primary btn-block\"\n                      onClick={() => handleSubmit()}\n                    >\n                      Login\n                    </button>\n                 \n                </div>\n              )}\n            </Formik>\n\n            <div className=\"right-column-login text-center\">\n              <a href=\"#\">Forgot Password?</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}