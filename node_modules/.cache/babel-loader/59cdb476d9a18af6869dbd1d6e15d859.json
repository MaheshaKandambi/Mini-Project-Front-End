{"ast":null,"code":"import React, { Component } from \"react\";\nimport { useLoader } from \"@react-three/fiber\"; // import { OrbitControls, Stars } from \"@react-three/drei\";\n\nimport { Canvas } from \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport { Suspense } from \"react\";\nimport { MeshPhongMaterial } from \"three\";\nimport * as THREE from \"three\";\nimport texture from \"../images/Pregnancy by week/earthmap1k.jpg\";\nimport { OrbitControls } from \"https://threejs.org/examples/jsm/controls/OrbitControls.js\";\nvar mesh, renderer, scene, camera, controls;\ninit();\nanimate();\n\nfunction init() {\n  // renderer\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.body.appendChild(renderer.domElement); // scene\n\n  scene = new THREE.Scene(); // camera\n\n  camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 10000);\n  camera.position.set(20, 20, 20); // controls\n\n  controls = new OrbitControls(camera, renderer.domElement); // ambient\n\n  scene.add(new THREE.AmbientLight(0x222222)); // light\n\n  var light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(20, 20, 0);\n  scene.add(light); // axes\n\n  scene.add(new THREE.AxesHelper(20)); // geometry\n\n  var geometry = new THREE.SphereGeometry(5, 12, 8); // material\n\n  var material = new THREE.MeshPhongMaterial({\n    color: 0x00ffff,\n    flatShading: true,\n    transparent: true,\n    opacity: 0.7\n  }); // mesh\n\n  mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate); //controls.update();\n\n  renderer.render(scene, camera);\n}","map":{"version":3,"sources":["/home/mahesha/Documents/3rd Year 1 Semester/Mini Project (IS31230)/Mini_Project/src/components/pages/Inthewomb.js"],"names":["React","Component","useLoader","Canvas","styled","Suspense","MeshPhongMaterial","THREE","texture","OrbitControls","mesh","renderer","scene","camera","controls","init","animate","WebGLRenderer","setSize","window","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","Scene","PerspectiveCamera","position","set","add","AmbientLight","light","DirectionalLight","AxesHelper","geometry","SphereGeometry","material","color","flatShading","transparent","opacity","Mesh","requestAnimationFrame","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAwB,OAAxB;AACA,SAASC,iBAAT,QAAkC,OAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAASC,aAAT,QAA8B,4DAA9B;AAEA,IAAIC,IAAJ,EAAUC,QAAV,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,QAAnC;AAEAC,IAAI;AACJC,OAAO;;AAEP,SAASD,IAAT,GAAgB;AAEZ;AACAJ,EAAAA,QAAQ,GAAG,IAAIJ,KAAK,CAACU,aAAV,EAAX;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAkBC,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAV,EAAAA,QAAQ,CAACW,aAAT,CAAwBH,MAAM,CAACI,gBAA/B;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2Bf,QAAQ,CAACgB,UAApC,EANY,CAQZ;;AACAf,EAAAA,KAAK,GAAG,IAAIL,KAAK,CAACqB,KAAV,EAAR,CATY,CAWZ;;AACAf,EAAAA,MAAM,GAAG,IAAIN,KAAK,CAACsB,iBAAV,CAA6B,EAA7B,EAAiCV,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,KAA5E,CAAT;AACAR,EAAAA,MAAM,CAACiB,QAAP,CAAgBC,GAAhB,CAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAbY,CAeZ;;AACAjB,EAAAA,QAAQ,GAAG,IAAIL,aAAJ,CAAmBI,MAAnB,EAA2BF,QAAQ,CAACgB,UAApC,CAAX,CAhBY,CAkBZ;;AACAf,EAAAA,KAAK,CAACoB,GAAN,CAAW,IAAIzB,KAAK,CAAC0B,YAAV,CAAwB,QAAxB,CAAX,EAnBY,CAqBZ;;AACA,MAAIC,KAAK,GAAG,IAAI3B,KAAK,CAAC4B,gBAAV,CAA4B,QAA5B,EAAsC,CAAtC,CAAZ;AACAD,EAAAA,KAAK,CAACJ,QAAN,CAAeC,GAAf,CAAoB,EAApB,EAAuB,EAAvB,EAA2B,CAA3B;AACAnB,EAAAA,KAAK,CAACoB,GAAN,CAAWE,KAAX,EAxBY,CA0BZ;;AACAtB,EAAAA,KAAK,CAACoB,GAAN,CAAW,IAAIzB,KAAK,CAAC6B,UAAV,CAAsB,EAAtB,CAAX,EA3BY,CA6BZ;;AACA,MAAIC,QAAQ,GAAG,IAAI9B,KAAK,CAAC+B,cAAV,CAA0B,CAA1B,EAA6B,EAA7B,EAAiC,CAAjC,CAAf,CA9BY,CAgCZ;;AACA,MAAIC,QAAQ,GAAG,IAAIhC,KAAK,CAACD,iBAAV,CAA6B;AACxCkC,IAAAA,KAAK,EAAE,QADiC;AAExCC,IAAAA,WAAW,EAAE,IAF2B;AAGxCC,IAAAA,WAAW,EAAE,IAH2B;AAIxCC,IAAAA,OAAO,EAAE;AAJ+B,GAA7B,CAAf,CAjCY,CAwCZ;;AACAjC,EAAAA,IAAI,GAAG,IAAIH,KAAK,CAACqC,IAAV,CAAgBP,QAAhB,EAA0BE,QAA1B,CAAP;AACA3B,EAAAA,KAAK,CAACoB,GAAN,CAAWtB,IAAX;AAEH;;AAED,SAASM,OAAT,GAAmB;AAEf6B,EAAAA,qBAAqB,CAAE7B,OAAF,CAArB,CAFe,CAIf;;AAEAL,EAAAA,QAAQ,CAACmC,MAAT,CAAiBlC,KAAjB,EAAwBC,MAAxB;AAEH","sourcesContent":["import React, { Component } from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\n// import { OrbitControls, Stars } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport {Suspense } from \"react\";\nimport { MeshPhongMaterial } from \"three\";\nimport * as THREE from \"three\";\nimport texture from \"../images/Pregnancy by week/earthmap1k.jpg\";\nimport { OrbitControls } from \"https://threejs.org/examples/jsm/controls/OrbitControls.js\";\n\nvar mesh, renderer, scene, camera, controls;\n\ninit();\nanimate();\n\nfunction init() {\n\n    // renderer\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    renderer.setPixelRatio( window.devicePixelRatio );\n    document.body.appendChild( renderer.domElement );\n\n    // scene\n    scene = new THREE.Scene();\n    \n    // camera\n    camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 );\n    camera.position.set( 20, 20, 20 );\n\n    // controls\n    controls = new OrbitControls( camera, renderer.domElement );\n    \n    // ambient\n    scene.add( new THREE.AmbientLight( 0x222222 ) );\n    \n    // light\n    var light = new THREE.DirectionalLight( 0xffffff, 1 );\n    light.position.set( 20,20, 0 );\n    scene.add( light );\n    \n    // axes\n    scene.add( new THREE.AxesHelper( 20 ) );\n\n    // geometry\n    var geometry = new THREE.SphereGeometry( 5, 12, 8 );\n    \n    // material\n    var material = new THREE.MeshPhongMaterial( {\n        color: 0x00ffff, \n        flatShading: true,\n        transparent: true,\n        opacity: 0.7,\n    } );\n    \n    // mesh\n    mesh = new THREE.Mesh( geometry, material );\n    scene.add( mesh );\n    \n}\n\nfunction animate() {\n\n    requestAnimationFrame( animate );\n    \n    //controls.update();\n\n    renderer.render( scene, camera );\n\n}\n"]},"metadata":{},"sourceType":"module"}