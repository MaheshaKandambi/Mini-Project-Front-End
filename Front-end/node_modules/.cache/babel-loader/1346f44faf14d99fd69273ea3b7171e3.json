{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../TimerCounter/Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KIckCounter = () => {\n  _s();\n\n  const [hour, setHour] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [second, setSecond] = useState('00');\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(0);\n  const [count, setCount] = useState(1);\n\n  const incrementCount = () => {\n    if (count < 100) {\n      setCount(count + 1);\n    }\n  };\n\n  const resetTime = () => {\n    setSecond('00');\n    setMinutes('00');\n    setHour(1);\n    setCount(1);\n    setCounter(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kickCounter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hour\",\n        children: hour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hour\",\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hour\",\n        children: second\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: () => setIsActive(!isActive),\n        children: [\" \", isActive ? 'Pause' : 'Start', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTime,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementCount,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(KIckCounter, \"UWI3NYVew5n2CxdrTAY4JagAmzw=\");\n\n_c = KIckCounter;\nexport default KIckCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"KIckCounter\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js"],"names":["React","useEffect","useState","KIckCounter","hour","setHour","minutes","setMinutes","second","setSecond","isActive","setIsActive","counter","setCounter","count","setCount","incrementCount","resetTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,6BAAP;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAE3B,QAAGF,KAAK,GAAC,GAAT,EAAa;AACXC,MAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;AACF,GALD;;AAOA,QAAMG,SAAS,GAAG,MAAI;AACpBR,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAU,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,CAAD,CAAV;AACD,GAND;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBT;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAE,MAAIG,WAAW,CAAC,CAACD,QAAF,CAAlD;AAAA,wBAAkEA,QAAQ,GAAG,OAAH,GAAa,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEO,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5CD;;GAAMX,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../TimerCounter/Counter.css';\n\n\n\nconst KIckCounter = () => {\n  const [hour, setHour] = useState('00')\n  const [minutes, setMinutes] = useState('00')\n  const [second, setSecond] = useState('00')\n  const [isActive, setIsActive] = useState(false)\n  const [counter, setCounter] = useState(0)\n  const [count, setCount] = useState(1)\n\n  const incrementCount = () => {\n\n    if(count<100){\n      setCount(count+1)\n    }\n  }\n\n  const resetTime = ()=>{\n    setSecond('00')\n    setMinutes('00')\n    setHour(1)\n    setCount(1)\n    setCounter(0)\n  }\n\n\n  return (\n    <div className='kickCounter'>\n      <div className='timer'>\n        <span className='hour'>{hour}</span>\n        <span>:</span>\n        <span className='hour'>{minutes}</span>\n        <span>:</span>\n        <span className='hour'>{second}</span>\n      </div>\n      <div className='buttons'>\n        <button className='start' onClick={()=>setIsActive(!isActive)}> { isActive ? 'Pause' : 'Start' } </button>\n        <button onClick={resetTime}>Reset</button>\n      </div>\n      <div className='counter'>\n        <button onClick={incrementCount}>+</button>\n        <h1>{count}</h1>\n        <button>-</button>\n      </div>\n    </div>\n  );\n}\n\nexport default KIckCounter;"]},"metadata":{},"sourceType":"module"}