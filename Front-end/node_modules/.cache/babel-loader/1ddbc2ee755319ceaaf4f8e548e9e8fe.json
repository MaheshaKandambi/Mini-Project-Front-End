{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/3rd Year 1 Semester/Mini Project (IS31230)/Mini_Project/src/components/pages/Inthewomb.js\";\nimport React from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { OrbitControls, Stars } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport { Suspense } from \"react\";\nimport { MeshPhongMaterial } from \"three\";\nimport * as THREE from \"three\";\nimport texture from \"./images/earthmap1k.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContainer = styled.div`\nwidth:100%;\nheight: 100%;\n;`;\n\nclass Earth extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 1;\n    camera.position.set(250, 200, 250);\n    camera.lookAt(0, 0, 0);\n    var controls = new OrbitControls(this.camera, this.mount);\n    var renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    var raycaster = new THREE.Raycaster();\n    var mouse = new THREE.Vector2();\n    renderer.setClearColor(\"#00000\");\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    var light = new THREE.DirectionalLight(0xcccccc, 1);\n    light.position.set(5, 5, 5);\n    scene.add(light);\n    light.castShadow = true;\n    light.shadowCameraNear = 0.01;\n    light.shadowCameraFar = 15;\n    light.shadowCameraFov = 45;\n    light.shadowCameraLeft = -1;\n    light.shadowCameraRight = 1;\n    light.shadowCameraTop = 1;\n    light.shadowCameraBottom = -1;\n    light.shadowBias = 0.001;\n    light.shadowDarkness = 0.2;\n    light.shadowMapWidth = 1024;\n    light.shadowMapHeight = 1024;\n    this.mount.appendChild(renderer.domElement); // window.addEventListener(\"resize\", () => {\n    //   renderer.setSize(window.innerWidth, window.innerHeight);\n    //   camera.aspect = window.innerWidth / window.innerHeight;\n    //   camera.updateProjectionMatrix();\n    // });\n\n    var render = function () {\n      requestAnimationFrame(render);\n      renderer.render(scene, camera);\n    };\n\n    var geometry = new THREE.SphereGeometry(0.5, 32, 32);\n    var material = new THREE.MeshPhongMaterial();\n    material.map = THREE.ImageUtils.loadTexture(texture); // material.bumpMap = THREE.ImageUtils.loadTexture(\"images/earthbump1k.jpg\");\n    // material.bumpScale = 0.05;\n    // material.specularMap = THREE.ImageUtils.loadTexture(\n    //   \"images/earthspec1k.jpg\"\n    // );\n    // material.specular = new THREE.Color(\"grey\");\n\n    var earthMesh = new THREE.Mesh(geometry, material);\n    scene.add(earthMesh);\n    render();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Earth;","map":{"version":3,"sources":["/home/mahesha/Documents/3rd Year 1 Semester/Mini Project (IS31230)/Mini_Project/src/components/pages/Inthewomb.js"],"names":["React","useLoader","OrbitControls","Stars","Canvas","styled","Suspense","MeshPhongMaterial","THREE","texture","CanvasContainer","div","Earth","Component","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","set","lookAt","controls","mount","renderer","WebGLRenderer","antialias","raycaster","Raycaster","mouse","Vector2","setClearColor","setSize","light","DirectionalLight","add","castShadow","shadowCameraNear","shadowCameraFar","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","appendChild","domElement","render","requestAnimationFrame","geometry","SphereGeometry","material","map","ImageUtils","loadTexture","earthMesh","Mesh","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { OrbitControls, Stars } from \"@react-three/drei\";\nimport { Canvas } from \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport {Suspense } from \"react\";\nimport { MeshPhongMaterial } from \"three\";\nimport * as THREE from \"three\";\nimport texture from \"./images/earthmap1k.jpg\";\n\n\nconst CanvasContainer =styled.div`\nwidth:100%;\nheight: 100%;\n;`\n\n\nclass Earth extends Component {\n    componentDidMount() {\n     var scene = new THREE.Scene();\n   var camera = new THREE.PerspectiveCamera(\n     75,\n     window.innerWidth / window.innerHeight,\n     0.1,\n     1000\n      );\n       camera.position.z = 1;\n       camera.position.set(250, 200, 250);\n       camera.lookAt(0, 0, 0);\n      var controls = new OrbitControls(this.camera, this.mount);\n   \n   var renderer = new THREE.WebGLRenderer({ antialias: true });\n   var raycaster = new THREE.Raycaster();\n   var mouse = new THREE.Vector2();\n   renderer.setClearColor(\"#00000\");\n   renderer.setSize(window.innerWidth, window.innerHeight);\n   \n   var light = new THREE.DirectionalLight(0xcccccc, 1);\n   light.position.set(5, 5, 5);\n   scene.add(light);\n   light.castShadow = true;\n   light.shadowCameraNear = 0.01;\n   light.shadowCameraFar = 15;\n   light.shadowCameraFov = 45;\n   \n   light.shadowCameraLeft = -1;\n   light.shadowCameraRight = 1;\n   light.shadowCameraTop = 1;\n   light.shadowCameraBottom = -1;\n   \n   light.shadowBias = 0.001;\n   light.shadowDarkness = 0.2;\n   \n   light.shadowMapWidth = 1024;\n   light.shadowMapHeight = 1024;\n   this.mount.appendChild(renderer.domElement);\n   // window.addEventListener(\"resize\", () => {\n   //   renderer.setSize(window.innerWidth, window.innerHeight);\n   //   camera.aspect = window.innerWidth / window.innerHeight;\n   //   camera.updateProjectionMatrix();\n   // });\n   \n   var render = function () {\n     requestAnimationFrame(render);\n     renderer.render(scene, camera);\n   };\n   \n   var geometry = new THREE.SphereGeometry(0.5, 32, 32);\n   var material = new THREE.MeshPhongMaterial();\n   material.map = THREE.ImageUtils.loadTexture(texture);\n   // material.bumpMap = THREE.ImageUtils.loadTexture(\"images/earthbump1k.jpg\");\n   // material.bumpScale = 0.05;\n   // material.specularMap = THREE.ImageUtils.loadTexture(\n   //   \"images/earthspec1k.jpg\"\n   // );\n   // material.specular = new THREE.Color(\"grey\");\n   var earthMesh = new THREE.Mesh(geometry, material);\n   \n   scene.add(earthMesh);\n   \n   render();\n    }\n      render() {\n   return <div ref={(ref) => (this.mount = ref)} />;\n    }\n   }\n    export default Earth;"]},"metadata":{},"sourceType":"module"}