{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js\";\nimport React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\nimport Navbar from \"../Navbar\";\nimport Footer from '../Footer'; // const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"blue\"\n// };\n// const pollQuestion2 = \"Are you at risk for a preterm labor?\";\n// const pollAnswers2 = [\n//   { option: \"Yes\", votes: 5 },\n//   { option: \"No\", votes: 12 },\n//   { option: \"I don't know\", votes: 8 }\n// ];\n// const pollQuestion3 = \"Are you attending any childbirth classes?\";\n// const pollAnswers3 = [\n//   { option: \"yes\", votes: 5 },\n//   { option: \"No\", votes: 20 },\n//   { option: \"No, but I'm going to start\", votes: 12 }\n// ];\n// const pollQuestion4 = \"Are you competitive?\";\n// const pollAnswers4 = [\n//   { option: \"yes\", votes: 7 },\n//   { option: \"Sometimes\", votes: 20 },\n//   { option: \"No\", votes: 4 }\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pollAnswers2 = [{\n  id: 1,\n  pollQuestion: \"What framework do you prefer?\",\n  pollAnswers: [{\n    option: \"React\",\n    votes: 5\n  }, {\n    option: \"Vue\",\n    votes: 2\n  }, {\n    option: \"Angular\",\n    votes: 1\n  }]\n}, {\n  id: 2,\n  pollQuestion: \"What do you prefer?\",\n  pollAnswers: [{\n    option: \"ect\",\n    votes: 100\n  }, {\n    option: \"Vueee\",\n    votes: 12\n  }, {\n    option: \"Angular\",\n    votes: 11\n  }]\n}, {\n  id: 3,\n  pollQuestion: \"What do you prefer hiiiii?\",\n  pollAnswers: [{\n    option: \"ect\",\n    votes: 97\n  }, {\n    option: \"Vueee\",\n    votes: 12\n  }, {\n    option: \"Angular\",\n    votes: 11\n  }]\n}];\nconst pollStyles2 = {\n  questionSeparator: true,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\nexport default class Insights extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // pollAnswers1: [...pollAnswers1],\n      pollAnswers2: [...pollAnswers2] // pollAnswers3: [...pollAnswers3],\n      // pollAnswers4: [...pollAnswers4],\n\n    };\n\n    this.autoAddVotes = (pollAnswers2, pollNumber) => {\n      setTimeout(() => {\n        const choseAnswer = parseInt(Math.random() * 2, 10);\n        this.handleVote(pollAnswers2[choseAnswer].option, pollAnswers2, pollNumber);\n        this.autoAddVotes(pollAnswers2, pollNumber);\n      }, Math.random() * 5000);\n    };\n  }\n\n  // handleVote = (voteAnswer, pollAnswers2, pollNumber) => {\n  //   const newPollAnswers = pollAnswers2.map((answer) => {\n  //     if (answer.option === voteAnswer) answer.votes++;\n  //     return answer;\n  //   });\n  //   if (pollNumber === 1) {\n  //     this.setState({\n  //       pollAnswers2: newPollAnswers\n  //     });\n  //   } else {\n  //     this.setState({\n  //       // pollAnswers2: newPollAnswers,\n  //       // pollAnswers3: newPollAnswers\n  //     });\n  //   }\n  // };\n  componentDidMount() {\n    const {\n      pollAnswers1,\n      pollAnswers2,\n      pollAnswers3,\n      pollAnswers4\n    } = this.state; // this.autoAddVotes(pollAnswers1, 1);\n\n    this.autoAddVotes(pollAnswers2, 2); // this.autoAddVotes(pollAnswers3, 3);\n    // this.autoAddVotes(pollAnswers4, 4);\n  }\n\n  render() {\n    const {\n      pollAnswers1,\n      pollAnswers2,\n      pollAnswers3,\n      pollAnswers4\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main-poll\",\n            children: pollAnswers2.map(values => {\n              const {\n                id,\n                pollQuestion,\n                pollAnswers2\n              } = values;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Poll, {\n                  question: pollQuestion,\n                  answers: pollAnswers2,\n                  onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers2, 2),\n                  customStyles: pollStyles2,\n                  noStorage: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 15\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js"],"names":["React","Component","Box","Grid","Poll","Navbar","Footer","pollAnswers2","id","pollQuestion","pollAnswers","option","votes","pollStyles2","questionSeparator","questionSeparatorWidth","questionBold","questionColor","align","theme","Insights","state","autoAddVotes","pollNumber","setTimeout","choseAnswer","parseInt","Math","random","handleVote","componentDidMount","pollAnswers1","pollAnswers3","pollAnswers4","render","map","values","voteAnswer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\nimport Navbar from \"../Navbar\";\nimport Footer from '../Footer';\n\n// const pollQuestion1 = \"Do you regularly do kegal exercises?\";\n// const pollAnswers1 = [\n//   { option: \"Yes\", votes: 22 },\n//   { option: \"No\", votes: 48 },\n//   { option: \"No, but I'm going to start\", votes: 30 }\n// ];\n// const pollStyles1 = {\n//   questionSeparator: true,\n//   questionSeparatorWidth: \"question\",\n//   questionBold: false,\n//   questionColor: \"#4F70D6\",\n//   align: \"center\",\n//   theme: \"blue\"\n// };\n\n// const pollQuestion2 = \"Are you at risk for a preterm labor?\";\n// const pollAnswers2 = [\n//   { option: \"Yes\", votes: 5 },\n//   { option: \"No\", votes: 12 },\n//   { option: \"I don't know\", votes: 8 }\n// ];\n\n// const pollQuestion3 = \"Are you attending any childbirth classes?\";\n// const pollAnswers3 = [\n//   { option: \"yes\", votes: 5 },\n//   { option: \"No\", votes: 20 },\n//   { option: \"No, but I'm going to start\", votes: 12 }\n// ];\n// const pollQuestion4 = \"Are you competitive?\";\n// const pollAnswers4 = [\n//   { option: \"yes\", votes: 7 },\n//   { option: \"Sometimes\", votes: 20 },\n//   { option: \"No\", votes: 4 }\n// ];\nconst pollAnswers2 = [\n{\n id: 1,\n pollQuestion : \"What framework do you prefer?\",\n pollAnswers : [\n  { option: \"React\", votes: 5 },\n  { option: \"Vue\", votes: 2 },\n  { option: \"Angular\", votes: 1 }\n],\n},\n{\n  id: 2,\n pollQuestion : \"What do you prefer?\",\n pollAnswers : [\n  { option: \"ect\", votes: 100 },\n  { option: \"Vueee\", votes: 12 },\n  { option: \"Angular\", votes: 11 }\n],\n},\n{\n  id: 3,\npollQuestion : \"What do you prefer hiiiii?\",\npollAnswers : [\n  { option: \"ect\", votes: 97},\n  { option: \"Vueee\", votes: 12 },\n  { option: \"Angular\", votes: 11 }\n],\n}\n]\nconst pollStyles2 = {\n  questionSeparator: true,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\n\n\nexport default class Insights extends Component {\n  state = {\n    // pollAnswers1: [...pollAnswers1],\n    pollAnswers2: [...pollAnswers2],\n    // pollAnswers3: [...pollAnswers3],\n    // pollAnswers4: [...pollAnswers4],\n    \n  };\n\n  // handleVote = (voteAnswer, pollAnswers2, pollNumber) => {\n  //   const newPollAnswers = pollAnswers2.map((answer) => {\n  //     if (answer.option === voteAnswer) answer.votes++;\n  //     return answer;\n  //   });\n\n  //   if (pollNumber === 1) {\n  //     this.setState({\n  //       pollAnswers2: newPollAnswers\n  //     });\n  //   } else {\n  //     this.setState({\n  //       // pollAnswers2: newPollAnswers,\n  //       // pollAnswers3: newPollAnswers\n  //     });\n  //   }\n  // };\n\n  componentDidMount() {\n    const { pollAnswers1, pollAnswers2, pollAnswers3, pollAnswers4 } = this.state;\n    // this.autoAddVotes(pollAnswers1, 1);\n    this.autoAddVotes(pollAnswers2, 2);\n    // this.autoAddVotes(pollAnswers3, 3);\n    // this.autoAddVotes(pollAnswers4, 4);\n  }\n\n  autoAddVotes = (pollAnswers2, pollNumber) => {\n    setTimeout(() => {\n      const choseAnswer = parseInt(Math.random() * 2, 10);\n      this.handleVote(pollAnswers2[choseAnswer].option, pollAnswers2, pollNumber);\n      this.autoAddVotes(pollAnswers2, pollNumber);\n    }, Math.random() * 5000);\n  };\n\n  render() {\n    const { pollAnswers1, pollAnswers2, pollAnswers3, pollAnswers4 } = this.state;\n\n    return (\n      <>\n    <Navbar />\n      <div className=\"poll\">\n        <Grid container spacing={3}>\n          <main className=\"main-poll\"> \n\n            {pollAnswers2.map((values)=>{\n                const {id, pollQuestion, pollAnswers2}=values;\n                   return(\n\n            <Grid item xs={12} key={id}>    \n            {/* <Grid item xs={12}> */}\n              <Poll\n                question={pollQuestion}\n                answers={pollAnswers2}\n                onVote={(voteAnswer) =>\n                  this.handleVote(voteAnswer, pollAnswers2, 2)\n                }\n                customStyles={pollStyles2}\n                noStorage\n              />\n            </Grid>\n               )\n              })}\n        \n          </main>\n        </Grid>\n      </div>\n      <Footer />\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}