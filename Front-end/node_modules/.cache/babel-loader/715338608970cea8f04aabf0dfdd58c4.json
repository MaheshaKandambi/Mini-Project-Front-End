{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Duedate.js\";\nimport React from \"react\";\nimport '../Calculator/Duedate.css';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Duedate() {\n  Date.getFormattedDateDiff = function (date1, date2) {\n    var b = moment(date1),\n        a = moment(date2),\n        intervals = ['years', 'months', 'weeks', 'days'],\n        out = [];\n\n    for (var i = 0; i < intervals.length; i++) {\n      var diff = a.diff(b, intervals[i]);\n      b.add(diff, intervals[i]);\n      out.push(diff + ' ' + intervals[i]);\n    }\n\n    return out.join(', ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"calculateInterval\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 15\n  }, this);\n}\n\n_c = Duedate;\n\nconst calculateInterval = () => {\n  var start = new Date(document.getElementById('start').value),\n      end = new Date(document.getElementById('end').value);\n  document.getElementById('out1').innerHTML = 'Time elapsed between \"' + start.toISOString().split('T')[0] + '\" and \"' + end.toISOString().split('T')[0] + '\":<br/>' + Date.getFormattedDateDiff(start, end);\n};\n\nvar today = new Date(),\n    newYear = new Date(today.getFullYear(), 0, 1),\n    y2k = new Date(2000, 0, 1);\ndocument.getElementById('out2').innerHTML = 'Time since New Year:<br/>' + Date.getFormattedDateDiff(newYear, today) + '<p>Time since Y2K:<br/>' + Date.getFormattedDateDiff(y2k, today) + '</p>';\nexport default Duedate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Duedate\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Duedate.js"],"names":["React","$","moment","render","Duedate","Date","getFormattedDateDiff","date1","date2","b","a","intervals","out","i","length","diff","add","push","join","calculateInterval","start","document","getElementById","value","end","innerHTML","toISOString","split","today","newYear","getFullYear","y2k"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAII,SAASC,OAAT,GAAmB;AACfC,EAAAA,IAAI,CAACC,oBAAL,GAA4B,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC/C,QAAIC,CAAC,GAAGP,MAAM,CAACK,KAAD,CAAd;AAAA,QACIG,CAAC,GAAGR,MAAM,CAACM,KAAD,CADd;AAAA,QAEIG,SAAS,GAAG,CAAC,OAAD,EAAS,QAAT,EAAkB,OAAlB,EAA0B,MAA1B,CAFhB;AAAA,QAGIC,GAAG,GAAG,EAHV;;AAKA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,SAAS,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,UAAIE,IAAI,GAAGL,CAAC,CAACK,IAAF,CAAON,CAAP,EAAUE,SAAS,CAACE,CAAD,CAAnB,CAAX;AACAJ,MAAAA,CAAC,CAACO,GAAF,CAAMD,IAAN,EAAYJ,SAAS,CAACE,CAAD,CAArB;AACAD,MAAAA,GAAG,CAACK,IAAJ,CAASF,IAAI,GAAG,GAAP,GAAaJ,SAAS,CAACE,CAAD,CAA/B;AACH;;AACD,WAAOD,GAAG,CAACM,IAAJ,CAAS,IAAT,CAAP;AACD,GAZH;;AAcE,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGL;;KAlBQd,O;;AAoBH,MAAMe,iBAAiB,GAAC,MAAM;AAC3B,MAAIC,KAAK,GAAG,IAAIf,IAAJ,CAASgB,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAA1C,CAAZ;AAAA,MACIC,GAAG,GAAK,IAAInB,IAAJ,CAASgB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,KAAxC,CADZ;AAGAF,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCG,SAAhC,GACI,2BAA2BL,KAAK,CAACM,WAAN,GAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAA3B,GACA,SADA,GACYH,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADZ,GAC8C,SAD9C,GAEAtB,IAAI,CAACC,oBAAL,CAA0Bc,KAA1B,EAAiCI,GAAjC,CAHJ;AAIF,CARD;;AAUA,IAAII,KAAK,GAAK,IAAIvB,IAAJ,EAAd;AAAA,IACIwB,OAAO,GAAG,IAAIxB,IAAJ,CAASuB,KAAK,CAACE,WAAN,EAAT,EAA8B,CAA9B,EAAiC,CAAjC,CADd;AAAA,IAEIC,GAAG,GAAO,IAAI1B,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAFd;AAIAgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCG,SAAhC,GACI,8BAA8BpB,IAAI,CAACC,oBAAL,CAA0BuB,OAA1B,EAAmCD,KAAnC,CAA9B,GACA,yBADA,GAC4BvB,IAAI,CAACC,oBAAL,CAA0ByB,GAA1B,EAA+BH,KAA/B,CAD5B,GACoE,MAFxE;AAIV,eAAexB,OAAf","sourcesContent":["import React from \"react\";\nimport '../Calculator/Duedate.css'\nimport $ from 'jquery';\nimport moment from 'moment';\nimport { render } from \"react-dom\";\n\n\n\n    function Duedate() {\n        Date.getFormattedDateDiff = function(date1, date2) {\n            var b = moment(date1),\n                a = moment(date2),\n                intervals = ['years','months','weeks','days'],\n                out = [];\n          \n            for(var i=0; i<intervals.length; i++){\n                var diff = a.diff(b, intervals[i]);\n                b.add(diff, intervals[i]);\n                out.push(diff + ' ' + intervals[i]);\n            }\n            return out.join(', ');\n          };\n\n          return (\n              <calculateInterval />\n          )\n    }\n          \n          const calculateInterval=() => {\n             var start = new Date(document.getElementById('start').value),\n                 end   = new Date(document.getElementById('end').value);\n            \n             document.getElementById('out1').innerHTML \n               = 'Time elapsed between \"' + start.toISOString().split('T')[0]\n               + '\" and \"' + end.toISOString().split('T')[0] + '\":<br/>' \n               + Date.getFormattedDateDiff(start, end);\n          }\n          \n          var today   = new Date(),\n              newYear = new Date(today.getFullYear(), 0, 1),\n              y2k     = new Date(2000, 0, 1);\n          \n          document.getElementById('out2').innerHTML \n            = 'Time since New Year:<br/>' + Date.getFormattedDateDiff(newYear, today)\n            + '<p>Time since Y2K:<br/>' + Date.getFormattedDateDiff(y2k, today) + '</p>';\n     \nexport default Duedate;"]},"metadata":{},"sourceType":"module"}