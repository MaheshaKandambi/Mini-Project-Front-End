{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js\";\nimport React, { useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport '../TimerCounter/Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Kick extends React.Component {\n  constructor(props, timer) {\n    super(props);\n\n    this.handleStart = () => {\n      this.timer = setInterval(() => {\n        this.setState(prevState => {\n          return {//  millisecond: prevState.millisecond + 1\n          };\n        });\n\n        if (this.state.millisecond === 100) {\n          this.setState(prevState => {\n            return {\n              second: prevState.second + 1,\n              millisecond: 0\n            };\n          });\n        }\n\n        if (this.state.second === 60) {\n          this.setState(prevState => {\n            return {\n              minute: prevState.minute + 1,\n              second: 0\n            };\n          });\n        }\n\n        if (this.state.minute === 60) {\n          this.setState(prevState => {\n            return {\n              hour: prevState.hour + 1,\n              minute: 0\n            };\n          });\n        }\n      }, 10);\n    };\n\n    this.handleStop = () => {\n      clearInterval(this.timer);\n    };\n\n    this.handleReset = () => {\n      this.setState(() => {\n        return {\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        };\n      });\n    };\n\n    this.timer = timer;\n    this.state = {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        time: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Action, {\n        handleStart: this.handleStart,\n        handleStop: this.handleStop,\n        handleReset: this.handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Kick Counter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\n\nconst Timer = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.time.hour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.time.minute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.time.second\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.time.millisecond\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Timer;\n\nconst Action = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleReset,\n      children: \"RESET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleStart,\n      children: \"START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleStop,\n      children: \"STOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Action;\nexport default Kick;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"Action\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/KickCounter.js"],"names":["React","useEffect","useState","render","Kick","Component","constructor","props","timer","handleStart","setInterval","setState","prevState","state","millisecond","second","minute","hour","handleStop","clearInterval","handleReset","Header","Timer","time","Action"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport '../TimerCounter/Counter.css';\n\nclass Kick extends React.Component {  \n  constructor(props, timer){  \n    super(props);  \n    this.timer = timer;\n\n    this.state = {  \n         hour: 0,\n         minute: 0,\n         second: 0,\n         millisecond: 0\n      };  \n  }  \n\n  handleStart = ()=>{  \n   this.timer = setInterval(()=>{\n     this.setState((prevState) => {\n       return{\n        //  millisecond: prevState.millisecond + 1\n       };\n     });\n\n     if(this.state.millisecond === 100){\n       this.setState((prevState) => {\n         return{\n           second: prevState.second + 1,\n           millisecond: 0\n         }\n       })\n     }\n\n     if(this.state.second === 60){\n       this.setState((prevState) => {\n         return{\n           minute: prevState.minute + 1,\n           second: 0\n         };\n       });\n     }\n\n     if(this.state.minute === 60) {\n       this.setState((prevState) => {\n         return{\n           hour: prevState.hour + 1,\n           minute: 0\n         };\n       });\n     }\n   }, 10);\n  };\n\n  handleStop = ()=>{  \n    clearInterval(this.timer);\n  }; \n\n  handleReset = ()=>{  \n    this.setState(() => {\n      return{\n        hour:0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      }\n    }); \n  }; \n\n\n  render() {  \n    return(\n    <div>\n      <Header />\n      <Timer time={this.state}/>\n      <Action handleStart={this.handleStart} handleStop={this.handleStop} handleReset={this.handleReset}/>\n    </div>\n    );  \n  }  \n}\n\nconst Header =() =>{\n  return<h1>Kick Counter</h1>\n};\n\nconst Timer = (props) => {\n  return(\n    <div>\n      <div>{props.time.hour}</div>:\n      <div>{props.time.minute}</div>:\n      <div>{props.time.second}</div>:\n      <div>{props.time.millisecond}</div>\n    </div>\n  );\n};\n\nconst Action = (props) =>{\n  return (  \n    <div>\n      <button onClick={props.handleReset}>RESET</button>\n      <button onClick={props.handleStart}>START</button>\n      <button onClick={props.handleStop}>STOP</button>\n    </div>\n  );\n}\n\n \n    \n  \n\nexport default Kick;  "]},"metadata":{},"sourceType":"module"}