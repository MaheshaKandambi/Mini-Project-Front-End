{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../SignUp.css\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport AuthContext from \"../../context/AuthProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const userRef = useRef();\n  const navigate = useNavigate();\n  const formRef = useRef(); // const [email,setEmail]=useState('');\n  // const [password,setPassword]=useState('');\n  // const [firstName,setfirstName]=useState('');\n  // const [lastName,setlastName]=useState('');\n  // const [userName,setusername]=\n  // const [errMsg,setErrMsg]=useState('');\n\n  const [success, setSuccess] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false); // useEffect(()=>{\n  //     setErrMsg('');\n  //   },[email,password]);\n\n  const [messageItem, setMessageItem] = useState({\n    message: \"\",\n    category: \"\"\n  });\n\n  const handleSubmitForm = async data => {\n    try {\n      var _res$data, _res$data2;\n\n      console.log(\"FORM DATA\", data);\n      const url = `${process.env.REACT_APP_API_ORIGIN}/signup`;\n      const res = await axios.post(url, {\n        email: data.email,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        username: data.username,\n        password: data.password\n      });\n      console.log(res.data);\n      const accessToken = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token;\n      console.log(accessToken);\n      localStorage.setItem(\"testJSON\", accessToken);\n      const roles = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.roles;\n\n      const setAuth = _ref2 => {\n        let {\n          email,\n          password,\n          roles,\n          accessToken\n        } = _ref2;\n      }; // setEmail('');\n      // setPassword('');\n\n\n      setSuccess(true);\n      navigate('/home'); //01 save res.data in local storage\n      //02\n      //option 1 refresh page\n      // option 2 cotext hook update user token and info\n      //03 \n      //go to authenticated page \n      // => dashboard inside page\n\n      formRef.current.resetForm();\n      setSnackbarOpen(true); // console.log(\"User signed successful!!\");\n\n      onLogin();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/logo2.jpg\",\n          className: \"phone\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/logo1.jpg\",\n            className: \"signup-logo\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info\",\n            children: \"Sign up to track your pregnancy and more infomation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/google.png\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), \"Log in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"or\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: messageItem,\n            validationSchema: Yup.object().shape({\n              email: Yup.string().required(\"Email is required\"),\n              password: Yup.string().required(\"Password is required\")\n            }),\n            onSubmit: handleSubmitForm,\n            innerRef: formRef,\n            children: _ref3 => {\n              let {\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-group\",\n                  id: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  name: \"email\",\n                  onChange: handleChange,\n                  value: values.email,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  variant: \"outlined\",\n                  name: \"firstName\",\n                  onChange: handleChange,\n                  value: values.firstName,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  variant: \"outlined\",\n                  name: \"lastName\",\n                  onChange: handleChange,\n                  value: values.lastName,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"username\",\n                  label: \"UserName\",\n                  variant: \"outlined\",\n                  name: \"username\",\n                  onChange: handleChange,\n                  value: values.username,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  className: \"form-control\",\n                  id: \"password\",\n                  label: \"Password\",\n                  variant: \"outlined\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  value: values.password,\n                  error: Boolean(touched.message && errors.message),\n                  helperText: touched.message && errors.message,\n                  onBlur: handleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"signup btn-primary btn-block\",\n                  onClick: () => handleSubmit(),\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"terms\",\n            children: [\"By signing up, you agree to our \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Terms, Data Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 78\n            }, this), \" and \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Cookies Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 108\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column-login text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"FGaW/MOy4Hu+LLzP+Ld+k59KZes=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Signup.js"],"names":["React","Link","Formik","TextField","Yup","useState","useRef","useContext","useEffect","useNavigate","AuthContext","axios","Signup","onLogin","setAuth","userRef","navigate","formRef","success","setSuccess","snackbarOpen","setSnackbarOpen","messageItem","setMessageItem","message","category","handleSubmitForm","data","console","log","url","process","env","REACT_APP_API_ORIGIN","res","post","email","firstName","lastName","username","password","accessToken","token","localStorage","setItem","roles","current","resetForm","err","object","shape","string","required","handleChange","handleBlur","handleSubmit","values","touched","errors","Boolean"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,IAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,MAAT,OAA6B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAUP,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMK,OAAO,GAACT,MAAM,EAApB;AACA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGX,MAAM,EAAtB,CAJyB,CAKzB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAqBd,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD,CAZyB,CAczB;AACA;AACA;;AAGE,QAAM,CAACiB,WAAD,EAAcC,cAAd,IACJlB,QAAQ,CAAC;AACLmB,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAD,CADV;;AAMA,QAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AAEvC,QAAI;AAAA;;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACA,YAAMG,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,SAAhD;AACD,YAAMC,GAAG,GAAE,MAAMvB,KAAK,CAClBwB,IADa,CACRL,GADQ,EACH;AACTM,QAAAA,KAAK,EAACT,IAAI,CAACS,KADF;AAETC,QAAAA,SAAS,EAACV,IAAI,CAACU,SAFN;AAGTC,QAAAA,QAAQ,EAACX,IAAI,CAACW,QAHL;AAITC,QAAAA,QAAQ,EAACZ,IAAI,CAACY,QAJL;AAKTC,QAAAA,QAAQ,EAACb,IAAI,CAACa;AALL,OADG,CAAjB;AAQGZ,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,IAAhB;AAGA,YAAMc,WAAW,GAAGP,GAAH,aAAGA,GAAH,oCAAGA,GAAG,CAAEP,IAAR,8CAAG,UAAWe,KAA/B;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYY,WAAZ;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,WAAjC;AACA,YAAMI,KAAK,GAACX,GAAD,aAACA,GAAD,qCAACA,GAAG,CAAEP,IAAN,+CAAC,WAAWkB,KAAvB;;AACA,YAAM/B,OAAO,GAAC,SAAsC;AAAA,YAArC;AAACsB,UAAAA,KAAD;AAAOI,UAAAA,QAAP;AAAgBK,UAAAA,KAAhB;AAAsBJ,UAAAA;AAAtB,SAAqC;AAAE,OAAtD,CAlBA,CAmBA;AACA;;;AAEAtB,MAAAA,UAAU,CAAC,IAAD,CAAV;AAGAH,MAAAA,QAAQ,CAAC,OAAD,CAAR,CAzBA,CA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGFC,MAAAA,OAAO,CAAC6B,OAAR,CAAgBC,SAAhB;AACA1B,MAAAA,eAAe,CAAC,IAAD,CAAf,CArCE,CAsCF;;AACAR,MAAAA,OAAO;AACR,KAxCD,CAwCE,OAAOmC,GAAP,EAAY;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACD;AACF,GA7CD;;AAgDF,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA;AAAK,UAAA,GAAG,EAAC,kBAAT;AAA4B,UAAA,SAAS,EAAC,OAAtC;AAA8C,UAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACA;AAAK,YAAA,GAAG,EAAC,kBAAT;AAA4B,YAAA,SAAS,EAAC,aAAtC;AAAoD,YAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,2BAAhC;AAAA,oCACA;AAAK,cAAA,GAAG,EAAC,mBAAT;AAA6B,cAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAMI;AAAG,YAAA,SAAS,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eASI,QAAC,MAAD;AACV,YAAA,aAAa,EAAE1B,WADL;AAEV,YAAA,gBAAgB,EAAElB,GAAG,CAAC6C,MAAJ,GAAaC,KAAb,CAAmB;AACnCd,cAAAA,KAAK,EAAEhC,GAAG,CAAC+C,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD4B;AAEnCZ,cAAAA,QAAQ,EAAEpC,GAAG,CAAC+C,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFyB,aAAnB,CAFR;AAMV,YAAA,QAAQ,EAAE1B,gBANA;AAOV,YAAA,QAAQ,EAAET,OAPA;AAAA,sBAST;AAAA,kBAAC;AACAoC,gBAAAA,YADA;AAEAC,gBAAAA,UAFA;AAGAC,gBAAAA,YAHA;AAIAC,gBAAAA,MAJA;AAKAC,gBAAAA,OALA;AAMAC,gBAAAA;AANA,eAAD;AAAA,kCAQC;AAAA,wCAEI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,EAAE,EAAC,OAFL;AAGE,kBAAA,KAAK,EAAC,OAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,OALP;AAME,kBAAA,QAAQ,EAAEL,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAACpB,KAPhB;AAQE,kBAAA,KAAK,EAAEuB,OAAO,CAACF,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEiC,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OATxC;AAUE,kBAAA,MAAM,EAAE8B;AAVV;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAcI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,EAAE,EAAC,WAFL;AAGE,kBAAA,KAAK,EAAC,YAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,WALP;AAME,kBAAA,QAAQ,EAAED,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAACnB,SAPhB;AAQE,kBAAA,KAAK,EAAEsB,OAAO,CAACF,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEiC,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OATxC;AAUE,kBAAA,MAAM,EAAE8B;AAVV;AAAA;AAAA;AAAA;AAAA,wBAdJ,eA0BI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,EAAE,EAAC,UAFL;AAGE,kBAAA,KAAK,EAAC,WAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,QAAQ,EAAED,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAAClB,QAPhB;AAQE,kBAAA,KAAK,EAAEqB,OAAO,CAACF,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEiC,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OATxC;AAUE,kBAAA,MAAM,EAAE8B;AAVV;AAAA;AAAA;AAAA;AAAA,wBA1BJ,eAsCI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,EAAE,EAAC,UAFL;AAGE,kBAAA,KAAK,EAAC,UAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,QAAQ,EAAED,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAACjB,QAPhB;AAQE,kBAAA,KAAK,EAAEoB,OAAO,CAACF,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEiC,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OATxC;AAUE,kBAAA,MAAM,EAAE8B;AAVV;AAAA;AAAA;AAAA;AAAA,wBAtCJ,eAkDI,QAAC,SAAD;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,EAAE,EAAC,UAFL;AAGE,kBAAA,KAAK,EAAC,UAHR;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,QAAQ,EAAED,YANZ;AAOE,kBAAA,KAAK,EAAEG,MAAM,CAAChB,QAPhB;AAQE,kBAAA,KAAK,EAAEmB,OAAO,CAACF,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OAA3B,CARhB;AASE,kBAAA,UAAU,EAAEiC,OAAO,CAACjC,OAAR,IAAmBkC,MAAM,CAAClC,OATxC;AAUE,kBAAA,MAAM,EAAE8B;AAVV;AAAA;AAAA;AAAA;AAAA,wBAlDJ,eAoEI;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,8BAFZ;AAGE,kBAAA,OAAO,EAAE,MAAMC,YAAY,EAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApEJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARD;AAAA;AATS;AAAA;AAAA;AAAA;AAAA,kBATJ,eA+HI;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,wEAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArD,wBAAmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/HJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkII;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACI;AAAA,yDAAoB;AAAG,cAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlIJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+IH;;GAxNQ3C,M;UAGYH,W;;;KAHZG,M;AA0NT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport \"../SignUp.css\";\nimport { Link  } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport { useState, useRef, useContext,useEffect} from \"react\";\nimport {useNavigate} from 'react-router-dom';\nimport AuthContext from \"../../context/AuthProvider\";\nimport axios from \"axios\";\n\n\n\nfunction Signup({ onLogin }) {\n    const {setAuth}=useContext(AuthContext);\n    const userRef=useRef();\n    const navigate = useNavigate();\n    const formRef = useRef();\n    // const [email,setEmail]=useState('');\n    // const [password,setPassword]=useState('');\n    // const [firstName,setfirstName]=useState('');\n    // const [lastName,setlastName]=useState('');\n    // const [userName,setusername]=\n    // const [errMsg,setErrMsg]=useState('');\n    const [success,setSuccess]=useState(false);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n    // useEffect(()=>{\n    //     setErrMsg('');\n    //   },[email,password]);\n    \n    \n      const [messageItem, setMessageItem] =\n        useState({\n            message: \"\",\n            category: \"\",\n          });\n        \n      const handleSubmitForm = async (data) => {\n       \n        try {\n          console.log(\"FORM DATA\", data);\n          const url = `${process.env.REACT_APP_API_ORIGIN}/signup`;\n         const res= await axios\n            .post(url, {\n              email:data.email,\n              firstName:data.firstName,\n              lastName:data.lastName,\n              username:data.username,\n              password:data.password,\n            });\n            console.log(res.data);\n        \n            \n            const accessToken = res?.data?.token;\n            console.log(accessToken);\n            localStorage.setItem(\"testJSON\", accessToken);\n            const roles=res?.data?.roles;\n            const setAuth=({email,password,roles,accessToken})=>{};\n            // setEmail('');\n            // setPassword('');\n\n            setSuccess(true);\n    \n            \n            navigate('/home');\n           \n            //01 save res.data in local storage\n            //02\n            //option 1 refresh page\n            // option 2 cotext hook update user token and info\n            //03 \n            //go to authenticated page \n            // => dashboard inside page\n    \n           \n          formRef.current.resetForm();\n          setSnackbarOpen(true);\n          // console.log(\"User signed successful!!\");\n          onLogin();\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                <img src='images/logo2.jpg' className=\"phone\" alt=\"...\"/>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"right-column text-center\">\n                    <img src='images/logo1.jpg' className=\"signup-logo\" alt=\"...\"/>\n                        <p className=\"info\">Sign up to track your pregnancy and more infomation.</p>\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                        <img src='images/google.png' alt=\"...\"/>Log in with Google\n                        </button>\n                        <p className=\"or\">OR</p>\n\n\n                        <Formik\n              initialValues={messageItem}\n              validationSchema={Yup.object().shape({\n                email: Yup.string().required(\"Email is required\"),\n                password: Yup.string().required(\"Password is required\"),\n              })}\n              onSubmit={handleSubmitForm}\n              innerRef={formRef}\n            >\n              {({\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                values,\n                touched,\n                errors,\n              }) => (\n                <div>\n                  \n                    <TextField\n                      className=\"form-group\"\n                      id=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      value={values.email}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      variant=\"outlined\"\n                      name=\"firstName\"\n                      onChange={handleChange}\n                      value={values.firstName}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      variant=\"outlined\"\n                      name=\"lastName\"\n                      onChange={handleChange}\n                      value={values.lastName}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"username\"\n                      label=\"UserName\"\n                      variant=\"outlined\"\n                      name=\"username\"\n                      onChange={handleChange}\n                      value={values.username}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    <TextField\n                      className=\"form-control\"\n                      id=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      value={values.password}\n                      error={Boolean(touched.message && errors.message)}\n                      helperText={touched.message && errors.message}\n                      onBlur={handleBlur}\n                    />\n                    {/* <div className=\"form-group\">\n                                <input type=\"text\" value={data.email} className=\"form-control\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\n                            </div> */}\n                    <button\n                      type=\"submit\"\n                      className=\"signup btn-primary btn-block\"\n                      onClick={() => handleSubmit()}\n                    >\n                      Sign Up\n                    </button>\n                 \n                </div>\n              )}\n            </Formik>\n\n                        {/* <form>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Mobile Number or Email\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"First Name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Email\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\"/>\n                            </div>\n                            <Link to=\"/login\"><button type=\"submit\" className=\"signup btn-primary btn-block\">Sign up</button></Link>\n                        </form> */}\n                        <p className=\"terms\">By signing up, you agree to our <b>Terms, Data Policy</b> and <b>Cookies Policy</b></p>\n                    </div>\n                    <div className=\"right-column-login text-center\">\n                        <p>Have an account? <a href=\"/login\">Login</a></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}