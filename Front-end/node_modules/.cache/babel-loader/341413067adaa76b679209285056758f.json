{"ast":null,"code":"var _jsxFileName = \"/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js\";\nimport React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pollQuestion1 = \"Do you regularly do kegal exercises?\";\nconst pollAnswers1 = [{\n  option: \"Yes\",\n  votes: 22\n}, {\n  option: \"No\",\n  votes: 48\n}, {\n  option: \"No, but I'm going to start\",\n  votes: 30\n}];\nconst pollStyles1 = {\n  questionSeparator: true,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"purple\"\n}; // const pollAnswers2 = [\n// {\n//  id: 1,\n//  pollQuestion : \"What framework do you prefer?\",\n//  pollAnswers : [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ],\n// },\n// {\n//   id: 2,\n//  pollQuestion : \"What do you prefer?\",\n//  pollAnswers : [\n//   { option: \"ect\", votes: 100 },\n//   { option: \"Vueee\", votes: 12 },\n//   { option: \"Angular\", votes: 11 }\n// ],\n// },\n// {\n//   id: 3,\n// pollQuestion : \"What do you prefer hiiiii?\",\n// pollAnswers : [\n//   { option: \"ect\", votes: 97},\n//   { option: \"Vueee\", votes: 12 },\n//   { option: \"Angular\", votes: 11 }\n// ],\n// }\n// ]\n\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\nexport default class Insights extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pollAnswers1: [...pollAnswers1],\n      pollAnswers2: [...pollAnswers2]\n    };\n\n    this.handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n      const newPollAnswers = pollAnswers.map(answer => {\n        if (answer.option === voteAnswer) answer.votes++;\n        return answer;\n      });\n\n      if (pollNumber === 1) {\n        this.setState({\n          pollAnswers1: newPollAnswers\n        });\n      } else {\n        this.setState({\n          pollAnswers2: newPollAnswers\n        });\n      }\n    };\n\n    this.autoAddVotes = (pollAnswers, pollNumber) => {\n      setTimeout(() => {\n        const choseAnswer = parseInt(Math.random() * 2, 10);\n        this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n        this.autoAddVotes(pollAnswers, pollNumber);\n      }, Math.random() * 5000);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pollAnswers1,\n      pollAnswers2\n    } = this.state;\n    this.autoAddVotes(pollAnswers1, 1);\n    this.autoAddVotes(pollAnswers2, 2);\n  }\n\n  render() {\n    const {\n      pollAnswers1,\n      pollAnswers2\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-poll\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Poll, {\n              question: pollQuestion1,\n              answers: pollAnswers1,\n              onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers1, 1),\n              customStyles: pollStyles1,\n              noStorage: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: pollAnswers2.map(values => {\n              const {\n                id,\n                pollQuestion,\n                pollAnswers\n              } = values;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Poll, {\n                  question: pollQuestion,\n                  answers: pollAnswers,\n                  onVote: voteAnswer => this.handleVote(voteAnswer, pollAnswers2, 2),\n                  customStyles: pollStyles2,\n                  noStorage: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 15\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/mahesha/Documents/Mini_Project/Front-end/src/components/pages/Insights.js"],"names":["React","Component","Box","Grid","Poll","pollQuestion1","pollAnswers1","option","votes","pollStyles1","questionSeparator","questionSeparatorWidth","questionBold","questionColor","align","theme","pollStyles2","Insights","state","pollAnswers2","handleVote","voteAnswer","pollAnswers","pollNumber","newPollAnswers","map","answer","setState","autoAddVotes","setTimeout","choseAnswer","parseInt","Math","random","componentDidMount","render","values","id","pollQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0BAAP;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,aAAa,GAAG,sCAAtB;AACA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CADmB,EAEnB;AAAED,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFmB,EAGnB;AAAED,EAAAA,MAAM,EAAE,4BAAV;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAHmB,CAArB;AAKA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,iBAAiB,EAAE,IADD;AAElBC,EAAAA,sBAAsB,EAAE,UAFN;AAGlBC,EAAAA,YAAY,EAAE,KAHI;AAIlBC,EAAAA,aAAa,EAAE,SAJG;AAKlBC,EAAAA,KAAK,EAAE,QALW;AAMlBC,EAAAA,KAAK,EAAE;AANW,CAApB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG;AAClBN,EAAAA,iBAAiB,EAAE,KADD;AAElBC,EAAAA,sBAAsB,EAAE,UAFN;AAGlBC,EAAAA,YAAY,EAAE,KAHI;AAIlBC,EAAAA,aAAa,EAAE,SAJG;AAKlBC,EAAAA,KAAK,EAAE,QALW;AAMlBC,EAAAA,KAAK,EAAE;AANW,CAApB;AAUA,eAAe,MAAME,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC9CiB,KAD8C,GACtC;AACNZ,MAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,CADR;AAENa,MAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ;AAFR,KADsC;;AAAA,SAM9CC,UAN8C,GAMjC,CAACC,UAAD,EAAaC,WAAb,EAA0BC,UAA1B,KAAyC;AACpD,YAAMC,cAAc,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,MAAD,IAAY;AACjD,YAAIA,MAAM,CAACnB,MAAP,KAAkBc,UAAtB,EAAkCK,MAAM,CAAClB,KAAP;AAClC,eAAOkB,MAAP;AACD,OAHsB,CAAvB;;AAKA,UAAIH,UAAU,KAAK,CAAnB,EAAsB;AACpB,aAAKI,QAAL,CAAc;AACZrB,UAAAA,YAAY,EAAEkB;AADF,SAAd;AAGD,OAJD,MAIO;AACL,aAAKG,QAAL,CAAc;AACZR,UAAAA,YAAY,EAAEK;AADF,SAAd;AAGD;AACF,KArB6C;;AAAA,SA6B9CI,YA7B8C,GA6B/B,CAACN,WAAD,EAAcC,UAAd,KAA6B;AAC1CM,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMC,WAAW,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoB,EAApB,CAA5B;AACA,aAAKb,UAAL,CAAgBE,WAAW,CAACQ,WAAD,CAAX,CAAyBvB,MAAzC,EAAiDe,WAAjD,EAA8DC,UAA9D;AACA,aAAKK,YAAL,CAAkBN,WAAlB,EAA+BC,UAA/B;AACD,OAJS,EAIPS,IAAI,CAACC,MAAL,KAAgB,IAJT,CAAV;AAKD,KAnC6C;AAAA;;AAuB9CC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAE5B,MAAAA,YAAF;AAAgBa,MAAAA;AAAhB,QAAiC,KAAKD,KAA5C;AACA,SAAKU,YAAL,CAAkBtB,YAAlB,EAAgC,CAAhC;AACA,SAAKsB,YAAL,CAAkBT,YAAlB,EAAgC,CAAhC;AACD;;AAUDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE7B,MAAAA,YAAF;AAAgBa,MAAAA;AAAhB,QAAiC,KAAKD,KAA5C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,QAAQ,EAAEb,aADZ;AAEE,cAAA,OAAO,EAAEC,YAFX;AAGE,cAAA,MAAM,EAAGe,UAAD,IACN,KAAKD,UAAL,CAAgBC,UAAhB,EAA4Bf,YAA5B,EAA0C,CAA1C,CAJJ;AAME,cAAA,YAAY,EAAEG,WANhB;AAOE,cAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAA,sBACCU,YAAY,CAACM,GAAb,CAAkBW,MAAD,IAAU;AACxB,oBAAM;AAACC,gBAAAA,EAAD;AAAKC,gBAAAA,YAAL;AAAmBhB,gBAAAA;AAAnB,kBAAgCc,MAAtC;AACG,kCAEP,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,IAAD;AACE,kBAAA,QAAQ,EAAEE,YADZ;AAEE,kBAAA,OAAO,EAAEhB,WAFX;AAGE,kBAAA,MAAM,EAAGD,UAAD,IACN,KAAKD,UAAL,CAAgBC,UAAhB,EAA4BF,YAA5B,EAA0C,CAA1C,CAJJ;AAME,kBAAA,YAAY,EAAEH,WANhB;AAOE,kBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA;AADF,iBAAwBqB,EAAxB;AAAA;AAAA;AAAA;AAAA,sBAFO;AAcJ,aAhBF;AADD,2BAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AA5F6C","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Insights/Insights.css\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Poll from \"react-polls\";\n\nconst pollQuestion1 = \"Do you regularly do kegal exercises?\";\nconst pollAnswers1 = [\n  { option: \"Yes\", votes: 22 },\n  { option: \"No\", votes: 48 },\n  { option: \"No, but I'm going to start\", votes: 30 }\n];\nconst pollStyles1 = {\n  questionSeparator: true,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"purple\"\n};\n\n// const pollAnswers2 = [\n// {\n//  id: 1,\n//  pollQuestion : \"What framework do you prefer?\",\n//  pollAnswers : [\n//   { option: \"React\", votes: 5 },\n//   { option: \"Vue\", votes: 2 },\n//   { option: \"Angular\", votes: 1 }\n// ],\n// },\n// {\n//   id: 2,\n//  pollQuestion : \"What do you prefer?\",\n//  pollAnswers : [\n//   { option: \"ect\", votes: 100 },\n//   { option: \"Vueee\", votes: 12 },\n//   { option: \"Angular\", votes: 11 }\n// ],\n// },\n// {\n//   id: 3,\n// pollQuestion : \"What do you prefer hiiiii?\",\n// pollAnswers : [\n//   { option: \"ect\", votes: 97},\n//   { option: \"Vueee\", votes: 12 },\n//   { option: \"Angular\", votes: 11 }\n// ],\n// }\n// ]\nconst pollStyles2 = {\n  questionSeparator: false,\n  questionSeparatorWidth: \"question\",\n  questionBold: false,\n  questionColor: \"#4F70D6\",\n  align: \"center\",\n  theme: \"blue\"\n};\n\n\nexport default class Insights extends Component {\n  state = {\n    pollAnswers1: [...pollAnswers1],\n    pollAnswers2: [...pollAnswers2]\n  };\n\n  handleVote = (voteAnswer, pollAnswers, pollNumber) => {\n    const newPollAnswers = pollAnswers.map((answer) => {\n      if (answer.option === voteAnswer) answer.votes++;\n      return answer;\n    });\n\n    if (pollNumber === 1) {\n      this.setState({\n        pollAnswers1: newPollAnswers\n      });\n    } else {\n      this.setState({\n        pollAnswers2: newPollAnswers\n      });\n    }\n  };\n\n  componentDidMount() {\n    const { pollAnswers1, pollAnswers2 } = this.state;\n    this.autoAddVotes(pollAnswers1, 1);\n    this.autoAddVotes(pollAnswers2, 2);\n  }\n\n  autoAddVotes = (pollAnswers, pollNumber) => {\n    setTimeout(() => {\n      const choseAnswer = parseInt(Math.random() * 2, 10);\n      this.handleVote(pollAnswers[choseAnswer].option, pollAnswers, pollNumber);\n      this.autoAddVotes(pollAnswers, pollNumber);\n    }, Math.random() * 5000);\n  };\n\n  render() {\n    const { pollAnswers1, pollAnswers2 } = this.state;\n\n    return (\n      <div className=\"poll\">\n        <Grid container spacing={3}>\n          <main className=\"main-poll\">\n            <Grid item xs={12}>\n              <Poll\n                question={pollQuestion1}\n                answers={pollAnswers1}\n                onVote={(voteAnswer) =>\n                  this.handleVote(voteAnswer, pollAnswers1, 1)\n                }\n                customStyles={pollStyles1}\n                noStorage\n              />\n            </Grid>\n            <>\n            {pollAnswers2.map((values)=>{\n                const {id, pollQuestion, pollAnswers}=values;\n                   return(\n                  \n            <Grid item xs={12} key={id}>\n              <Poll\n                question={pollQuestion}\n                answers={pollAnswers}\n                onVote={(voteAnswer) =>\n                  this.handleVote(voteAnswer, pollAnswers2, 2)\n                }\n                customStyles={pollStyles2}\n                noStorage\n              />\n            </Grid>\n               )\n              })}\n            </>\n\n            {/* <Grid item xs={12}>\n              <Box pr={2} pl={2} display=\"flex\" flexDirection=\"row-reverse\">\n                <Poll\n                  question={pollQuestion3}\n                  answers={pollAnswers3}\n                  onVote={(voteAnswer) =>\n                    this.handleVote(voteAnswer, pollAnswers3, 3)\n                  }\n                  customStyles={pollStyles2}\n                  noStorage\n                />\n              </Box>\n            </Grid> */}\n          </main>\n        </Grid>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}