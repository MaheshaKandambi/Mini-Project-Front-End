{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { useLoader } from \"@react-three/fiber\";\n// // import { OrbitControls, Stars } from \"@react-three/drei\";\n// import { Canvas } from \"@react-three/fiber\";\n// import styled from \"styled-components\";\n// import {Suspense } from \"react\";\n// import { MeshPhongMaterial } from \"three\";\n// import * as THREE from \"three\";\n// import texture from \"../images/Pregnancy by week/earthmap1k.jpg\";\n// import { OrbitControls } from \"https://threejs.org/examples/jsm/controls/OrbitControls.js\";\n// class Earth extends Component {\n//     componentDidMount() {\n//      var scene = new THREE.Scene();\n//    var camera = new THREE.PerspectiveCamera(\n//      75,\n//      window.innerWidth / window.innerHeight,\n//      0.1,\n//      1000\n//       );\n//        camera.position.z = 1;\n//        camera.position.set(250, 200, 250);\n//        camera.lookAt(0, 0, 0);\n//       var controls = new OrbitControls(this.camera, this.mount);\n//    var renderer = new THREE.WebGLRenderer({ antialias: true });\n//    var raycaster = new THREE.Raycaster();\n//    var mouse = new THREE.Vector2();\n//    renderer.setClearColor(\"#00000\");\n//    renderer.setSize(window.innerWidth, window.innerHeight);\n//    var light = new THREE.DirectionalLight(0xcccccc, 1);\n//    light.position.set(5, 5, 5);\n//    scene.add(light);\n//    light.castShadow = true;\n//    light.shadowCameraNear = 0.01;\n//    light.shadowCameraFar = 15;\n//    light.shadowCameraFov = 45;\n//    light.shadowCameraLeft = -1;\n//    light.shadowCameraRight = 1;\n//    light.shadowCameraTop = 1;\n//    light.shadowCameraBottom = -1;\n//    light.shadowBias = 0.001;\n//    light.shadowDarkness = 0.2;\n//    light.shadowMapWidth = 1024;\n//    light.shadowMapHeight = 1024;\n//    this.mount.appendChild(renderer.domElement);\n//    // window.addEventListener(\"resize\", () => {\n//    //   renderer.setSize(window.innerWidth, window.innerHeight);\n//    //   camera.aspect = window.innerWidth / window.innerHeight;\n//    //   camera.updateProjectionMatrix();\n//    // });\n//    var render = function () {\n//      requestAnimationFrame(render);\n//      renderer.render(scene, camera);\n//    };\n//    var geometry = new THREE.SphereGeometry(0.5, 32, 32);\n//    var material = new THREE.MeshPhongMaterial();\n//    material.map = THREE.ImageUtils.loadTexture(texture);\n//    // material.bumpMap = THREE.ImageUtils.loadTexture(\"images/earthbump1k.jpg\");\n//    // material.bumpScale = 0.05;\n//    // material.specularMap = THREE.ImageUtils.loadTexture(\n//    //   \"images/earthspec1k.jpg\"\n//    // );\n//    // material.specular = new THREE.Color(\"grey\");\n//    var earthMesh = new THREE.Mesh(geometry, material);\n//    scene.add(earthMesh);\n//    render();\n//     }\n//       render() {\n//    return <div ref={(ref) => (this.mount = ref)} />;\n//     }\n//    }\n//     export default Earth;","map":{"version":3,"sources":["/home/mahesha/Documents/3rd Year 1 Semester/Mini Project (IS31230)/Mini_Project/src/components/pages/Inthewomb.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from \"react\";\n// import { useLoader } from \"@react-three/fiber\";\n// // import { OrbitControls, Stars } from \"@react-three/drei\";\n// import { Canvas } from \"@react-three/fiber\";\n// import styled from \"styled-components\";\n// import {Suspense } from \"react\";\n// import { MeshPhongMaterial } from \"three\";\n// import * as THREE from \"three\";\n// import texture from \"../images/Pregnancy by week/earthmap1k.jpg\";\n// import { OrbitControls } from \"https://threejs.org/examples/jsm/controls/OrbitControls.js\";\n\n\n\n\n// class Earth extends Component {\n//     componentDidMount() {\n//      var scene = new THREE.Scene();\n//    var camera = new THREE.PerspectiveCamera(\n//      75,\n//      window.innerWidth / window.innerHeight,\n//      0.1,\n//      1000\n//       );\n//        camera.position.z = 1;\n//        camera.position.set(250, 200, 250);\n//        camera.lookAt(0, 0, 0);\n//       var controls = new OrbitControls(this.camera, this.mount);\n   \n//    var renderer = new THREE.WebGLRenderer({ antialias: true });\n//    var raycaster = new THREE.Raycaster();\n//    var mouse = new THREE.Vector2();\n//    renderer.setClearColor(\"#00000\");\n//    renderer.setSize(window.innerWidth, window.innerHeight);\n   \n//    var light = new THREE.DirectionalLight(0xcccccc, 1);\n//    light.position.set(5, 5, 5);\n//    scene.add(light);\n//    light.castShadow = true;\n//    light.shadowCameraNear = 0.01;\n//    light.shadowCameraFar = 15;\n//    light.shadowCameraFov = 45;\n   \n//    light.shadowCameraLeft = -1;\n//    light.shadowCameraRight = 1;\n//    light.shadowCameraTop = 1;\n//    light.shadowCameraBottom = -1;\n   \n//    light.shadowBias = 0.001;\n//    light.shadowDarkness = 0.2;\n   \n//    light.shadowMapWidth = 1024;\n//    light.shadowMapHeight = 1024;\n//    this.mount.appendChild(renderer.domElement);\n//    // window.addEventListener(\"resize\", () => {\n//    //   renderer.setSize(window.innerWidth, window.innerHeight);\n//    //   camera.aspect = window.innerWidth / window.innerHeight;\n//    //   camera.updateProjectionMatrix();\n//    // });\n   \n//    var render = function () {\n//      requestAnimationFrame(render);\n//      renderer.render(scene, camera);\n//    };\n   \n//    var geometry = new THREE.SphereGeometry(0.5, 32, 32);\n//    var material = new THREE.MeshPhongMaterial();\n//    material.map = THREE.ImageUtils.loadTexture(texture);\n//    // material.bumpMap = THREE.ImageUtils.loadTexture(\"images/earthbump1k.jpg\");\n//    // material.bumpScale = 0.05;\n//    // material.specularMap = THREE.ImageUtils.loadTexture(\n//    //   \"images/earthspec1k.jpg\"\n//    // );\n//    // material.specular = new THREE.Color(\"grey\");\n//    var earthMesh = new THREE.Mesh(geometry, material);\n   \n//    scene.add(earthMesh);\n   \n//    render();\n//     }\n//       render() {\n//    return <div ref={(ref) => (this.mount = ref)} />;\n//     }\n//    }\n//     export default Earth;"]},"metadata":{},"sourceType":"module"}